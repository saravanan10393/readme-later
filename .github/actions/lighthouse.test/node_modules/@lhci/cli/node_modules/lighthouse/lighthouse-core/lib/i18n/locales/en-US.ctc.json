{
  "lighthouse-core/audits/accessibility/accesskeys.js | description": {
    "message": "Access keys let users quickly focus a part of the page. For proper navigation, each access key must be unique. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user *why* they should try to pass. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/accesskeys/)"
      }
    }
  },
  "lighthouse-core/audits/accessibility/accesskeys.js | failureTitle": {
    "message": "$MARKDOWN_SNIPPET_0$ values are not unique",
    "description": "Title of an accesibility audit that evaluates if the ARIA HTML attributes are misaligned with the aria-role HTML attribute specificed on the element, such mismatches are invalid. This title is descriptive of the failing state and is shown to users when there is a failure that needs to be addressed.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`[accesskey]`",
        "example": "[accesskey]"
      }
    }
  },
  "lighthouse-core/audits/accessibility/accesskeys.js | title": {
    "message": "$MARKDOWN_SNIPPET_0$ values are unique",
    "description": "Title of an accesibility audit that evaluates if the accesskey HTML attribute values are unique across all elements. This title is descriptive of the successful state and is shown to users when no user action is required.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`[accesskey]`",
        "example": "[accesskey]"
      }
    }
  },
  "lighthouse-core/audits/accessibility/aria-allowed-attr.js | description": {
    "message": "Each ARIA $MARKDOWN_SNIPPET_0$ supports a specific subset of $MARKDOWN_SNIPPET_1$ attributes. Mismatching these invalidates the $MARKDOWN_SNIPPET_2$ attributes. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user *why* they should try to pass. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`role`",
        "example": "role"
      },
      "MARKDOWN_SNIPPET_1": {
        "content": "`aria-*`",
        "example": "aria-*"
      },
      "MARKDOWN_SNIPPET_2": {
        "content": "`aria-*`",
        "example": "aria-*"
      },
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/aria-allowed-attr/)"
      }
    }
  },
  "lighthouse-core/audits/accessibility/aria-allowed-attr.js | failureTitle": {
    "message": "$MARKDOWN_SNIPPET_0$ attributes do not match their roles",
    "description": "Title of an accesibility audit that evaluates if the ARIA HTML attributes are misaligned with the aria-role HTML attribute specificed on the element, such mismatches are invalid. This title is descriptive of the failing state and is shown to users when there is a failure that needs to be addressed.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`[aria-*]`",
        "example": "[aria-*]"
      }
    }
  },
  "lighthouse-core/audits/accessibility/aria-allowed-attr.js | title": {
    "message": "$MARKDOWN_SNIPPET_0$ attributes match their roles",
    "description": "Title of an accesibility audit that evaluates if the ARIA HTML attributes are misaligned with the aria-role HTML attribute specificed on the element, such mismatches are invalid. This title is descriptive of the successful state and is shown to users when no user action is required.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`[aria-*]`",
        "example": "[aria-*]"
      }
    }
  },
  "lighthouse-core/audits/accessibility/aria-required-attr.js | description": {
    "message": "Some ARIA roles have required attributes that describe the state of the element to screen readers. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user *why* they should try to pass. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/aria-required-attr/)"
      }
    }
  },
  "lighthouse-core/audits/accessibility/aria-required-attr.js | failureTitle": {
    "message": "$MARKDOWN_SNIPPET_0$s do not have all required $MARKDOWN_SNIPPET_1$ attributes",
    "description": "Title of an accesibility audit that evaluates if all elements with the aria-role attribute have the other corresponding ARIA attributes set as well. This title is descriptive of the failing state and is shown to users when there is a failure that needs to be addressed.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`[role]`",
        "example": "[role]"
      },
      "MARKDOWN_SNIPPET_1": {
        "content": "`[aria-*]`",
        "example": "[aria-*]"
      }
    }
  },
  "lighthouse-core/audits/accessibility/aria-required-attr.js | title": {
    "message": "$MARKDOWN_SNIPPET_0$s have all required $MARKDOWN_SNIPPET_1$ attributes",
    "description": "Title of an accesibility audit that evaluates if all elements with the aria-role attribute have the other corresponding ARIA attributes set as well. This title is descriptive of the successful state and is shown to users when no user action is required.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`[role]`",
        "example": "[role]"
      },
      "MARKDOWN_SNIPPET_1": {
        "content": "`[aria-*]`",
        "example": "[aria-*]"
      }
    }
  },
  "lighthouse-core/audits/accessibility/aria-required-children.js | description": {
    "message": "Some ARIA parent roles must contain specific child roles to perform their intended accessibility functions. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user *why* they should try to pass. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/aria-required-children/)"
      }
    }
  },
  "lighthouse-core/audits/accessibility/aria-required-children.js | failureTitle": {
    "message": "Elements with an ARIA $MARKDOWN_SNIPPET_0$ that require children to contain a specific $MARKDOWN_SNIPPET_1$ are missing some or all of those required children.",
    "description": "Title of an accesibility audit that evaluates if the elements with an aria-role that require child elements have the required children. This title is descriptive of the failing state and is shown to users when there is a failure that needs to be addressed.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`[role]`",
        "example": "[role]"
      },
      "MARKDOWN_SNIPPET_1": {
        "content": "`[role]`",
        "example": "[role]"
      }
    }
  },
  "lighthouse-core/audits/accessibility/aria-required-children.js | title": {
    "message": "Elements with an ARIA $MARKDOWN_SNIPPET_0$ that require children to contain a specific $MARKDOWN_SNIPPET_1$ have all required children.",
    "description": "Title of an accesibility audit that evaluates if the elements with an aria-role that require child elements have the required children. This title is descriptive of the successful state and is shown to users when no user action is required.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`[role]`",
        "example": "[role]"
      },
      "MARKDOWN_SNIPPET_1": {
        "content": "`[role]`",
        "example": "[role]"
      }
    }
  },
  "lighthouse-core/audits/accessibility/aria-required-parent.js | description": {
    "message": "Some ARIA child roles must be contained by specific parent roles to properly perform their intended accessibility functions. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user *why* they should try to pass. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/aria-required-parent/)"
      }
    }
  },
  "lighthouse-core/audits/accessibility/aria-required-parent.js | failureTitle": {
    "message": "$MARKDOWN_SNIPPET_0$s are not contained by their required parent element",
    "description": "Title of an accesibility audit that evaluates valid aria-role usage. Some ARIA roles require that elements must be a child of specific parent element. This audit checks that when those roles are used, the element with the role is in fact a child of the required parent. This title is descriptive of the failing state and is shown to users when there is a failure that needs to be addressed.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`[role]`",
        "example": "[role]"
      }
    }
  },
  "lighthouse-core/audits/accessibility/aria-required-parent.js | title": {
    "message": "$MARKDOWN_SNIPPET_0$s are contained by their required parent element",
    "description": "Title of an accesibility audit that evaluates valid aria-role usage. Some ARIA roles require that elements must be a child of specific parent element. This audit checks that when those roles are used, the element with the role is in fact a child of the required parent. This title is descriptive of the successful state and is shown to users when no user action is required.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`[role]`",
        "example": "[role]"
      }
    }
  },
  "lighthouse-core/audits/accessibility/aria-roles.js | description": {
    "message": "ARIA roles must have valid values in order to perform their intended accessibility functions. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user *why* they should try to pass. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/aria-roles/)"
      }
    }
  },
  "lighthouse-core/audits/accessibility/aria-roles.js | failureTitle": {
    "message": "$MARKDOWN_SNIPPET_0$ values are not valid",
    "description": "Title of an accesibility audit that evaluates if all elements have valid aria-role HTML attributes. This title is descriptive of the failing state and is shown to users when there is a failure that needs to be addressed.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`[role]`",
        "example": "[role]"
      }
    }
  },
  "lighthouse-core/audits/accessibility/aria-roles.js | title": {
    "message": "$MARKDOWN_SNIPPET_0$ values are valid",
    "description": "Title of an accesibility audit that evaluates if all elements have valid aria-role HTML attributes. This title is descriptive of the successful state and is shown to users when no user action is required.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`[role]`",
        "example": "[role]"
      }
    }
  },
  "lighthouse-core/audits/accessibility/aria-valid-attr-value.js | description": {
    "message": "Assistive technologies, like screen readers, can't interpret ARIA attributes with invalid values. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user *why* they should try to pass. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/aria-valid-attr-value/)"
      }
    }
  },
  "lighthouse-core/audits/accessibility/aria-valid-attr-value.js | failureTitle": {
    "message": "$MARKDOWN_SNIPPET_0$ attributes do not have valid values",
    "description": "Title of an accesibility audit that evaluates if all elements that have an ARIA HTML attribute have a valid value for that attribute. This title is descriptive of the failing state and is shown to users when there is a failure that needs to be addressed.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`[aria-*]`",
        "example": "[aria-*]"
      }
    }
  },
  "lighthouse-core/audits/accessibility/aria-valid-attr-value.js | title": {
    "message": "$MARKDOWN_SNIPPET_0$ attributes have valid values",
    "description": "Title of an accesibility audit that evaluates if all elements that have an ARIA HTML attribute have a valid value for that attribute. This title is descriptive of the successful state and is shown to users when no user action is required.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`[aria-*]`",
        "example": "[aria-*]"
      }
    }
  },
  "lighthouse-core/audits/accessibility/aria-valid-attr.js | description": {
    "message": "Assistive technologies, like screen readers, can't interpret ARIA attributes with invalid names. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user *why* they should try to pass. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/aria-valid-attr/)"
      }
    }
  },
  "lighthouse-core/audits/accessibility/aria-valid-attr.js | failureTitle": {
    "message": "$MARKDOWN_SNIPPET_0$ attributes are not valid or misspelled",
    "description": "Title of an accesibility audit that evaluates if all elements with ARIA HTML attributes have spelled the name of attribute correctly. This title is descriptive of the failing state and is shown to users when there is a failure that needs to be addressed.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`[aria-*]`",
        "example": "[aria-*]"
      }
    }
  },
  "lighthouse-core/audits/accessibility/aria-valid-attr.js | title": {
    "message": "$MARKDOWN_SNIPPET_0$ attributes are valid and not misspelled",
    "description": "Title of an accesibility audit that evaluates if all elements with ARIA HTML attributes have spelled the name of attribute correctly. This title is descriptive of the successful state and is shown to users when no user action is required.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`[aria-*]`",
        "example": "[aria-*]"
      }
    }
  },
  "lighthouse-core/audits/accessibility/audio-caption.js | description": {
    "message": "Captions make audio elements usable for deaf or hearing-impaired users, providing critical information such as who is talking, what they're saying, and other non-speech information. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user *why* they should try to pass. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/audio-caption/)"
      }
    }
  },
  "lighthouse-core/audits/accessibility/audio-caption.js | failureTitle": {
    "message": "$MARKDOWN_SNIPPET_0$ elements are missing a $MARKDOWN_SNIPPET_1$ element with $MARKDOWN_SNIPPET_2$.",
    "description": "Title of an accesibility audit that evaluates if all audio elements have a track element that has captions for screen readers. This title is descriptive of the failing state and is shown to users when there is a failure that needs to be addressed.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`<audio>`",
        "example": "<audio>"
      },
      "MARKDOWN_SNIPPET_1": {
        "content": "`<track>`",
        "example": "<track>"
      },
      "MARKDOWN_SNIPPET_2": {
        "content": "`[kind=\"captions\"]`",
        "example": "[kind=\"captions\"]"
      }
    }
  },
  "lighthouse-core/audits/accessibility/audio-caption.js | title": {
    "message": "$MARKDOWN_SNIPPET_0$ elements contain a $MARKDOWN_SNIPPET_1$ element with $MARKDOWN_SNIPPET_2$",
    "description": "Title of an accesibility audit that evaluates if all audio elements have a track element that has captions for screen readers. This title is descriptive of the successful state and is shown to users when no user action is required.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`<audio>`",
        "example": "<audio>"
      },
      "MARKDOWN_SNIPPET_1": {
        "content": "`<track>`",
        "example": "<track>"
      },
      "MARKDOWN_SNIPPET_2": {
        "content": "`[kind=\"captions\"]`",
        "example": "[kind=\"captions\"]"
      }
    },
    "meaning": "Title of an accesibility audit that evaluates if all audio elements have a track element that has captions for screen readers. This title is descriptive of the successful state and is shown to users when no user action is required."
  },
  "lighthouse-core/audits/accessibility/axe-audit.js | failingElementsHeader": {
    "message": "Failing Elements",
    "description": "Label of a table column that identifies HTML elements that have failed an audit.",
    "meaning": "Label of a table column that identifies HTML elements that have failed an audit."
  },
  "lighthouse-core/audits/accessibility/button-name.js | description": {
    "message": "When a button doesn't have an accessible name, screen readers announce it as \"button\", making it unusable for users who rely on screen readers. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user *why* they should try to pass. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/button-name/)"
      }
    }
  },
  "lighthouse-core/audits/accessibility/button-name.js | failureTitle": {
    "message": "Buttons do not have an accessible name",
    "description": "Title of an accesibility audit that evaluates if all button elements have names accessible to screen readers. This title is descriptive of the failing state and is shown to users when there is a failure that needs to be addressed."
  },
  "lighthouse-core/audits/accessibility/button-name.js | title": {
    "message": "Buttons have an accessible name",
    "description": "Title of an accesibility audit that evaluates if all button elements have names accessible to screen readers. This title is descriptive of the successful state and is shown to users when no user action is required."
  },
  "lighthouse-core/audits/accessibility/bypass.js | description": {
    "message": "Adding ways to bypass repetitive content lets keyboard users navigate the page more efficiently. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user *why* they should try to pass. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/bypass/)"
      }
    }
  },
  "lighthouse-core/audits/accessibility/bypass.js | failureTitle": {
    "message": "The page does not contain a heading, skip link, or landmark region",
    "description": "Title of an accesibility audit that evaluates if the page has elements that let screen reader users skip over repetitive content. `heading`, `skip link`, and `landmark region` are technical terms for the elements that enable quick page navigation. This title is descriptive of the failing state and is shown to users when there is a failure that needs to be addressed."
  },
  "lighthouse-core/audits/accessibility/bypass.js | title": {
    "message": "The page contains a heading, skip link, or landmark region",
    "description": "Title of an accesibility audit that evaluates if the page has elements that let screen reader users skip over repetitive content. `heading`, `skip link`, and `landmark region` are technical terms for the elements that enable quick page navigation. This title is descriptive of the successful state and is shown to users when no user action is required."
  },
  "lighthouse-core/audits/accessibility/color-contrast.js | description": {
    "message": "Low-contrast text is difficult or impossible for many users to read. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user *why* they should try to pass. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/color-contrast/)"
      }
    }
  },
  "lighthouse-core/audits/accessibility/color-contrast.js | failureTitle": {
    "message": "Background and foreground colors do not have a sufficient contrast ratio.",
    "description": "Title of an accesibility audit that evaluates if all foreground colors are distinct enough from their background colors to be legible for users. This title is descriptive of the failing state and is shown to users when there is a failure that needs to be addressed."
  },
  "lighthouse-core/audits/accessibility/color-contrast.js | title": {
    "message": "Background and foreground colors have a sufficient contrast ratio",
    "description": "Title of an accesibility audit that evaluates if all foreground colors are distinct enough from their background colors to be legible for users. This title is descriptive of the successful state and is shown to users when no user action is required."
  },
  "lighthouse-core/audits/accessibility/definition-list.js | description": {
    "message": "When definition lists are not properly marked up, screen readers may produce confusing or inaccurate output. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user *why* they should try to pass. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/definition-list/)"
      }
    }
  },
  "lighthouse-core/audits/accessibility/definition-list.js | failureTitle": {
    "message": "$MARKDOWN_SNIPPET_0$'s do not contain only properly-ordered $MARKDOWN_SNIPPET_1$ and $MARKDOWN_SNIPPET_2$ groups, $MARKDOWN_SNIPPET_3$ or $MARKDOWN_SNIPPET_4$ elements.",
    "description": "Title of an accesibility audit that evaluates if all the definition list elements have valid markup for screen readers. This title is descriptive of the failing state and is shown to users when there is a failure that needs to be addressed.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`<dl>`",
        "example": "<dl>"
      },
      "MARKDOWN_SNIPPET_1": {
        "content": "`<dt>`",
        "example": "<dt>"
      },
      "MARKDOWN_SNIPPET_2": {
        "content": "`<dd>`",
        "example": "<dd>"
      },
      "MARKDOWN_SNIPPET_3": {
        "content": "`<script>`",
        "example": "<script>"
      },
      "MARKDOWN_SNIPPET_4": {
        "content": "`<template>`",
        "example": "<template>"
      }
    }
  },
  "lighthouse-core/audits/accessibility/definition-list.js | title": {
    "message": "$MARKDOWN_SNIPPET_0$'s contain only properly-ordered $MARKDOWN_SNIPPET_1$ and $MARKDOWN_SNIPPET_2$ groups, $MARKDOWN_SNIPPET_3$ or $MARKDOWN_SNIPPET_4$ elements.",
    "description": "Title of an accesibility audit that evaluates if all the definition list elements have valid markup for screen readers. This title is descriptive of the successful state and is shown to users when no user action is required.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`<dl>`",
        "example": "<dl>"
      },
      "MARKDOWN_SNIPPET_1": {
        "content": "`<dt>`",
        "example": "<dt>"
      },
      "MARKDOWN_SNIPPET_2": {
        "content": "`<dd>`",
        "example": "<dd>"
      },
      "MARKDOWN_SNIPPET_3": {
        "content": "`<script>`",
        "example": "<script>"
      },
      "MARKDOWN_SNIPPET_4": {
        "content": "`<template>`",
        "example": "<template>"
      }
    }
  },
  "lighthouse-core/audits/accessibility/dlitem.js | description": {
    "message": "Definition list items ($MARKDOWN_SNIPPET_0$ and $MARKDOWN_SNIPPET_1$) must be wrapped in a parent $MARKDOWN_SNIPPET_2$ element to ensure that screen readers can properly announce them. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user *why* they should try to pass. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`<dt>`",
        "example": "<dt>"
      },
      "MARKDOWN_SNIPPET_1": {
        "content": "`<dd>`",
        "example": "<dd>"
      },
      "MARKDOWN_SNIPPET_2": {
        "content": "`<dl>`",
        "example": "<dl>"
      },
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/dlitem/)"
      }
    }
  },
  "lighthouse-core/audits/accessibility/dlitem.js | failureTitle": {
    "message": "Definition list items are not wrapped in $MARKDOWN_SNIPPET_0$ elements",
    "description": "Title of an accesibility audit that evaluates if all definition list item elements (`<dt>`/`<dd>`) have a definition list parent element (`<dl>`). This title is descriptive of the failing state and is shown to users when there is a failure that needs to be addressed.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`<dl>`",
        "example": "<dl>"
      }
    }
  },
  "lighthouse-core/audits/accessibility/dlitem.js | title": {
    "message": "Definition list items are wrapped in $MARKDOWN_SNIPPET_0$ elements",
    "description": "Title of an accesibility audit that evaluates if all definition list item elements (`<dt>`/`<dd>`) have a definition list parent element (`<dl>`). This title is descriptive of the successful state and is shown to users when no user action is required.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`<dl>`",
        "example": "<dl>"
      }
    }
  },
  "lighthouse-core/audits/accessibility/document-title.js | description": {
    "message": "The title gives screen reader users an overview of the page, and search engine users rely on it heavily to determine if a page is relevant to their search. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user *why* they should try to pass. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/document-title/)"
      }
    }
  },
  "lighthouse-core/audits/accessibility/document-title.js | failureTitle": {
    "message": "Document doesn't have a $MARKDOWN_SNIPPET_0$ element",
    "description": "Title of an accesibility audit that evaluates if the page has a <title> element that describes the page. This title is descriptive of the failing state and is shown to users when there is a failure that needs to be addressed.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`<title>`",
        "example": "<title>"
      }
    }
  },
  "lighthouse-core/audits/accessibility/document-title.js | title": {
    "message": "Document has a $MARKDOWN_SNIPPET_0$ element",
    "description": "Title of an accesibility audit that evaluates if the page has a <title> element that describes the page. This title is descriptive of the successful state and is shown to users when no user action is required.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`<title>`",
        "example": "<title>"
      }
    }
  },
  "lighthouse-core/audits/accessibility/duplicate-id.js | description": {
    "message": "The value of an id attribute must be unique to prevent other instances from being overlooked by assistive technologies. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user *why* they should try to pass. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/duplicate-id/)"
      }
    }
  },
  "lighthouse-core/audits/accessibility/duplicate-id.js | failureTitle": {
    "message": "$MARKDOWN_SNIPPET_0$ attributes on the page are not unique",
    "description": "Title of an accesibility audit that evaluates if there are any duplicate id HTML attributes on the page. This title is descriptive of the failing state and is shown to users when there is a failure that needs to be addressed.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`[id]`",
        "example": "[id]"
      }
    }
  },
  "lighthouse-core/audits/accessibility/duplicate-id.js | title": {
    "message": "$MARKDOWN_SNIPPET_0$ attributes on the page are unique",
    "description": "Title of an accesibility audit that evaluates if there are any duplicate id HTML attributes on the page. This title is descriptive of the successful state and is shown to users when no user action is required.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`[id]`",
        "example": "[id]"
      }
    }
  },
  "lighthouse-core/audits/accessibility/frame-title.js | description": {
    "message": "Screen reader users rely on frame titles to describe the contents of frames. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user *why* they should try to pass. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/frame-title/)"
      }
    }
  },
  "lighthouse-core/audits/accessibility/frame-title.js | failureTitle": {
    "message": "$MARKDOWN_SNIPPET_0$ or $MARKDOWN_SNIPPET_1$ elements do not have a title",
    "description": "Title of an accesibility audit that evaluates if all `<frame>` and `<iframe>` elements on the page have a title HTML attribute to describe their contents. This title is descriptive of the failing state and is shown to users when there is a failure that needs to be addressed.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`<frame>`",
        "example": "<frame>"
      },
      "MARKDOWN_SNIPPET_1": {
        "content": "`<iframe>`",
        "example": "<iframe>"
      }
    }
  },
  "lighthouse-core/audits/accessibility/frame-title.js | title": {
    "message": "$MARKDOWN_SNIPPET_0$ or $MARKDOWN_SNIPPET_1$ elements have a title",
    "description": "Title of an accesibility audit that evaluates if all `<frame>` and `<iframe>` elements on the page have a title HTML attribute to describe their contents. This title is descriptive of the successful state and is shown to users when no user action is required.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`<frame>`",
        "example": "<frame>"
      },
      "MARKDOWN_SNIPPET_1": {
        "content": "`<iframe>`",
        "example": "<iframe>"
      }
    }
  },
  "lighthouse-core/audits/accessibility/html-has-lang.js | description": {
    "message": "If a page doesn't specify a lang attribute, a screen reader assumes that the page is in the default language that the user chose when setting up the screen reader. If the page isn't actually in the default language, then the screen reader might not announce the page's text correctly. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user *why* they should try to pass. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/html-has-lang/)"
      }
    }
  },
  "lighthouse-core/audits/accessibility/html-has-lang.js | failureTitle": {
    "message": "$MARKDOWN_SNIPPET_0$ element does not have a $MARKDOWN_SNIPPET_1$ attribute",
    "description": "Title of an accesibility audit that evaluates if the root HTML tag has a lang attribute identifying the page's language. This title is descriptive of the failing state and is shown to users when there is a failure that needs to be addressed.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`<html>`",
        "example": "<html>"
      },
      "MARKDOWN_SNIPPET_1": {
        "content": "`[lang]`",
        "example": "[lang]"
      }
    }
  },
  "lighthouse-core/audits/accessibility/html-has-lang.js | title": {
    "message": "$MARKDOWN_SNIPPET_0$ element has a $MARKDOWN_SNIPPET_1$ attribute",
    "description": "Title of an accesibility audit that evaluates if the root HTML tag has a lang attribute identifying the page's language. This title is descriptive of the successful state and is shown to users when no user action is required.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`<html>`",
        "example": "<html>"
      },
      "MARKDOWN_SNIPPET_1": {
        "content": "`[lang]`",
        "example": "[lang]"
      }
    }
  },
  "lighthouse-core/audits/accessibility/html-lang-valid.js | description": {
    "message": "Specifying a valid $LINK_START_0$BCP 47 language$LINK_END_0$ helps screen readers announce text properly. $LINK_START_1$Learn more$LINK_END_1$.",
    "description": "Description of a Lighthouse audit that tells the user *why* they should try to pass. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://www.w3.org/International/questions/qa-choosing-language-tags#question)"
      },
      "LINK_START_1": {
        "content": "["
      },
      "LINK_END_1": {
        "content": "](https://web.dev/html-lang-valid/)"
      }
    }
  },
  "lighthouse-core/audits/accessibility/html-lang-valid.js | failureTitle": {
    "message": "$MARKDOWN_SNIPPET_0$ element does not have a valid value for its $MARKDOWN_SNIPPET_1$ attribute.",
    "description": "Title of an accesibility audit that evaluates if the value for root HTML tag's lang attribute is a valid BCP 47 language. This title is descriptive of the failing state and is shown to users when there is a failure that needs to be addressed.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`<html>`",
        "example": "<html>"
      },
      "MARKDOWN_SNIPPET_1": {
        "content": "`[lang]`",
        "example": "[lang]"
      }
    }
  },
  "lighthouse-core/audits/accessibility/html-lang-valid.js | title": {
    "message": "$MARKDOWN_SNIPPET_0$ element has a valid value for its $MARKDOWN_SNIPPET_1$ attribute",
    "description": "Title of an accesibility audit that evaluates if the value for root HTML tag's lang attribute is a valid BCP 47 language. This title is descriptive of the successful state and is shown to users when no user action is required.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`<html>`",
        "example": "<html>"
      },
      "MARKDOWN_SNIPPET_1": {
        "content": "`[lang]`",
        "example": "[lang]"
      }
    }
  },
  "lighthouse-core/audits/accessibility/image-alt.js | description": {
    "message": "Informative elements should aim for short, descriptive alternate text. Decorative elements can be ignored with an empty alt attribute. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user *why* they should try to pass. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/image-alt/)"
      }
    }
  },
  "lighthouse-core/audits/accessibility/image-alt.js | failureTitle": {
    "message": "Image elements do not have $MARKDOWN_SNIPPET_0$ attributes",
    "description": "Title of an accesibility audit that evaluates if all image elements have the alt HTML attribute to describe their contents. This title is descriptive of the failing state and is shown to users when there is a failure that needs to be addressed.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`[alt]`",
        "example": "[alt]"
      }
    }
  },
  "lighthouse-core/audits/accessibility/image-alt.js | title": {
    "message": "Image elements have $MARKDOWN_SNIPPET_0$ attributes",
    "description": "Title of an accesibility audit that evaluates if all image elements have the alt HTML attribute to describe their contents. This title is descriptive of the successful state and is shown to users when no user action is required.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`[alt]`",
        "example": "[alt]"
      }
    }
  },
  "lighthouse-core/audits/accessibility/input-image-alt.js | description": {
    "message": "When an image is being used as an $MARKDOWN_SNIPPET_0$ button, providing alternative text can help screen reader users understand the purpose of the button. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user *why* they should try to pass. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`<input>`",
        "example": "<input>"
      },
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/input-image-alt/)"
      }
    }
  },
  "lighthouse-core/audits/accessibility/input-image-alt.js | failureTitle": {
    "message": "$MARKDOWN_SNIPPET_0$ elements do not have $MARKDOWN_SNIPPET_1$ text",
    "description": "Title of an accesibility audit that evaluates if all input elements of type image have an alt HTML attribute to describe their contents. This title is descriptive of the failing state and is shown to users when there is a failure that needs to be addressed.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`<input type=\"image\">`",
        "example": "<input type=\"image\">"
      },
      "MARKDOWN_SNIPPET_1": {
        "content": "`[alt]`",
        "example": "[alt]"
      }
    },
    "meaning": "Title of an accesibility audit that evaluates if all input elements of type image have an alt HTML attribute to describe their contents. This title is descriptive of the failing state and is shown to users when there is a failure that needs to be addressed."
  },
  "lighthouse-core/audits/accessibility/input-image-alt.js | title": {
    "message": "$MARKDOWN_SNIPPET_0$ elements have $MARKDOWN_SNIPPET_1$ text",
    "description": "Title of an accesibility audit that evaluates if all input elements of type image have an alt HTML attribute to describe their contents. This title is descriptive of the successful state and is shown to users when no user action is required.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`<input type=\"image\">`",
        "example": "<input type=\"image\">"
      },
      "MARKDOWN_SNIPPET_1": {
        "content": "`[alt]`",
        "example": "[alt]"
      }
    },
    "meaning": "Title of an accesibility audit that evaluates if all input elements of type image have an alt HTML attribute to describe their contents. This title is descriptive of the successful state and is shown to users when no user action is required."
  },
  "lighthouse-core/audits/accessibility/label.js | description": {
    "message": "Labels ensure that form controls are announced properly by assistive technologies, like screen readers. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user *why* they should try to pass. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/label/)"
      }
    }
  },
  "lighthouse-core/audits/accessibility/label.js | failureTitle": {
    "message": "Form elements do not have associated labels",
    "description": "Title of an accesibility audit that evaluates if all form elements have corresponding label elements. This title is descriptive of the failing state and is shown to users when there is a failure that needs to be addressed."
  },
  "lighthouse-core/audits/accessibility/label.js | title": {
    "message": "Form elements have associated labels",
    "description": "Title of an accesibility audit that evaluates if all form elements have corresponding label elements. This title is descriptive of the successful state and is shown to users when no user action is required."
  },
  "lighthouse-core/audits/accessibility/layout-table.js | description": {
    "message": "A table being used for layout purposes should not include data elements, such as the th or caption elements or the summary attribute, because this can create a confusing experience for screen reader users. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user *why* they should try to pass. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/layout-table/)"
      }
    }
  },
  "lighthouse-core/audits/accessibility/layout-table.js | failureTitle": {
    "message": "Presentational $MARKDOWN_SNIPPET_0$ elements do not avoid using $MARKDOWN_SNIPPET_1$, $MARKDOWN_SNIPPET_2$ or the $MARKDOWN_SNIPPET_3$ attribute.",
    "description": "Title of an accesibility audit that evaluates if a table intended for layout contains data annotations as it can be confusing for screen readers. This is evaluated by checking if tables with the ARIA role of `presentation` or `none` contain any data elements such as table headers (`<th>`). This title is descriptive of the failing state and is shown to users when there is a failure that needs to be addressed.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`<table>`",
        "example": "<table>"
      },
      "MARKDOWN_SNIPPET_1": {
        "content": "`<th>`",
        "example": "<th>"
      },
      "MARKDOWN_SNIPPET_2": {
        "content": "`<caption>`",
        "example": "<caption>"
      },
      "MARKDOWN_SNIPPET_3": {
        "content": "`[summary]`",
        "example": "[summary]"
      }
    }
  },
  "lighthouse-core/audits/accessibility/layout-table.js | title": {
    "message": "Presentational $MARKDOWN_SNIPPET_0$ elements avoid using $MARKDOWN_SNIPPET_1$, $MARKDOWN_SNIPPET_2$ or the $MARKDOWN_SNIPPET_3$ attribute.",
    "description": "Title of an accesibility audit that evaluates if a table intended for layout contains data annotations as it can be confusing for screen readers. This is evaluated by checking if tables with the ARIA role of `presentation` or `none` contain any data elements such as table headers (`<th>`). This title is descriptive of the successful state and is shown to users when no user action is required.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`<table>`",
        "example": "<table>"
      },
      "MARKDOWN_SNIPPET_1": {
        "content": "`<th>`",
        "example": "<th>"
      },
      "MARKDOWN_SNIPPET_2": {
        "content": "`<caption>`",
        "example": "<caption>"
      },
      "MARKDOWN_SNIPPET_3": {
        "content": "`[summary]`",
        "example": "[summary]"
      }
    }
  },
  "lighthouse-core/audits/accessibility/link-name.js | description": {
    "message": "Link text (and alternate text for images, when used as links) that is discernible, unique, and focusable improves the navigation experience for screen reader users. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user *why* they should try to pass. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/link-name/)"
      }
    }
  },
  "lighthouse-core/audits/accessibility/link-name.js | failureTitle": {
    "message": "Links do not have a discernible name",
    "description": "Title of an accesibility audit that evaluates if all link elements have a non-generic name to screen readers. This title is descriptive of the failing state and is shown to users when there is a failure that needs to be addressed."
  },
  "lighthouse-core/audits/accessibility/link-name.js | title": {
    "message": "Links have a discernible name",
    "description": "Title of an accesibility audit that evaluates if all link elements have a non-generic name to screen readers. This title is descriptive of the successful state and is shown to users when no user action is required."
  },
  "lighthouse-core/audits/accessibility/list.js | description": {
    "message": "Screen readers have a specific way of announcing lists. Ensuring proper list structure aids screen reader output. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user *why* they should try to pass. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/list/)"
      }
    }
  },
  "lighthouse-core/audits/accessibility/list.js | failureTitle": {
    "message": "Lists do not contain only $MARKDOWN_SNIPPET_0$ elements and script supporting elements ($MARKDOWN_SNIPPET_1$ and $MARKDOWN_SNIPPET_2$).",
    "description": "Title of an accesibility audit that evaluates if all list elements have a valid structure containing only list items. This title is descriptive of the failing state and is shown to users when there is a failure that needs to be addressed.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`<li>`",
        "example": "<li>"
      },
      "MARKDOWN_SNIPPET_1": {
        "content": "`<script>`",
        "example": "<script>"
      },
      "MARKDOWN_SNIPPET_2": {
        "content": "`<template>`",
        "example": "<template>"
      }
    }
  },
  "lighthouse-core/audits/accessibility/list.js | title": {
    "message": "Lists contain only $MARKDOWN_SNIPPET_0$ elements and script supporting elements ($MARKDOWN_SNIPPET_1$ and $MARKDOWN_SNIPPET_2$).",
    "description": "Title of an accesibility audit that evaluates if all list elements have a valid structure containing only list items. This title is descriptive of the successful state and is shown to users when no user action is required.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`<li>`",
        "example": "<li>"
      },
      "MARKDOWN_SNIPPET_1": {
        "content": "`<script>`",
        "example": "<script>"
      },
      "MARKDOWN_SNIPPET_2": {
        "content": "`<template>`",
        "example": "<template>"
      }
    }
  },
  "lighthouse-core/audits/accessibility/listitem.js | description": {
    "message": "Screen readers require list items ($MARKDOWN_SNIPPET_0$) to be contained within a parent $MARKDOWN_SNIPPET_1$ or $MARKDOWN_SNIPPET_2$ to be announced properly. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user *why* they should try to pass. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`<li>`",
        "example": "<li>"
      },
      "MARKDOWN_SNIPPET_1": {
        "content": "`<ul>`",
        "example": "<ul>"
      },
      "MARKDOWN_SNIPPET_2": {
        "content": "`<ol>`",
        "example": "<ol>"
      },
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/listitem/)"
      }
    }
  },
  "lighthouse-core/audits/accessibility/listitem.js | failureTitle": {
    "message": "List items ($MARKDOWN_SNIPPET_0$) are not contained within $MARKDOWN_SNIPPET_1$ or $MARKDOWN_SNIPPET_2$ parent elements.",
    "description": "Title of an accesibility audit that evaluates if any list item elements do not have list parent elements. This title is descriptive of the failing state and is shown to users when there is a failure that needs to be addressed.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`<li>`",
        "example": "<li>"
      },
      "MARKDOWN_SNIPPET_1": {
        "content": "`<ul>`",
        "example": "<ul>"
      },
      "MARKDOWN_SNIPPET_2": {
        "content": "`<ol>`",
        "example": "<ol>"
      }
    }
  },
  "lighthouse-core/audits/accessibility/listitem.js | title": {
    "message": "List items ($MARKDOWN_SNIPPET_0$) are contained within $MARKDOWN_SNIPPET_1$ or $MARKDOWN_SNIPPET_2$ parent elements",
    "description": "Title of an accesibility audit that evaluates if any list item elements do not have list parent elements. This title is descriptive of the successful state and is shown to users when no user action is required.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`<li>`",
        "example": "<li>"
      },
      "MARKDOWN_SNIPPET_1": {
        "content": "`<ul>`",
        "example": "<ul>"
      },
      "MARKDOWN_SNIPPET_2": {
        "content": "`<ol>`",
        "example": "<ol>"
      }
    }
  },
  "lighthouse-core/audits/accessibility/meta-refresh.js | description": {
    "message": "Users do not expect a page to refresh automatically, and doing so will move focus back to the top of the page. This may create a frustrating or confusing experience. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user *why* they should try to pass. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/meta-refresh/)"
      }
    }
  },
  "lighthouse-core/audits/accessibility/meta-refresh.js | failureTitle": {
    "message": "The document uses $MARKDOWN_SNIPPET_0$",
    "description": "Title of an accesibility audit that evaluates if the page uses a meta tag that refreshes the page automatically. This title is descriptive of the failing state and is shown to users when there is a failure that needs to be addressed.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`<meta http-equiv=\"refresh\">`",
        "example": "<meta http-equiv=\"refresh\">"
      }
    }
  },
  "lighthouse-core/audits/accessibility/meta-refresh.js | title": {
    "message": "The document does not use $MARKDOWN_SNIPPET_0$",
    "description": "Title of an accesibility audit that evaluates if the page uses a meta tag that refreshes the page automatically. This title is descriptive of the successful state and is shown to users when no user action is required.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`<meta http-equiv=\"refresh\">`",
        "example": "<meta http-equiv=\"refresh\">"
      }
    }
  },
  "lighthouse-core/audits/accessibility/meta-viewport.js | description": {
    "message": "Disabling zooming is problematic for users with low vision who rely on screen magnification to properly see the contents of a web page. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user *why* they should try to pass. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/meta-viewport/)"
      }
    }
  },
  "lighthouse-core/audits/accessibility/meta-viewport.js | failureTitle": {
    "message": "$MARKDOWN_SNIPPET_0$ is used in the $MARKDOWN_SNIPPET_1$ element or the $MARKDOWN_SNIPPET_2$ attribute is less than 5.",
    "description": "Title of an accesibility audit that evaluates if the page has limited the scaling properties of the page in a way that harms users with low vision. This title is descriptive of the failing state and is shown to users when there is a failure that needs to be addressed.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`[user-scalable=\"no\"]`",
        "example": "[user-scalable=\"no\"]"
      },
      "MARKDOWN_SNIPPET_1": {
        "content": "`<meta name=\"viewport\">`",
        "example": "<meta name=\"viewport\">"
      },
      "MARKDOWN_SNIPPET_2": {
        "content": "`[maximum-scale]`",
        "example": "[maximum-scale]"
      }
    }
  },
  "lighthouse-core/audits/accessibility/meta-viewport.js | title": {
    "message": "$MARKDOWN_SNIPPET_0$ is not used in the $MARKDOWN_SNIPPET_1$ element and the $MARKDOWN_SNIPPET_2$ attribute is not less than 5.",
    "description": "Title of an accesibility audit that evaluates if the page has limited the scaling properties of the page in a way that harms users with low vision. This title is descriptive of the successful state and is shown to users when no user action is required.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`[user-scalable=\"no\"]`",
        "example": "[user-scalable=\"no\"]"
      },
      "MARKDOWN_SNIPPET_1": {
        "content": "`<meta name=\"viewport\">`",
        "example": "<meta name=\"viewport\">"
      },
      "MARKDOWN_SNIPPET_2": {
        "content": "`[maximum-scale]`",
        "example": "[maximum-scale]"
      }
    }
  },
  "lighthouse-core/audits/accessibility/object-alt.js | description": {
    "message": "Screen readers cannot translate non-text content. Adding alt text to $MARKDOWN_SNIPPET_0$ elements helps screen readers convey meaning to users. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user *why* they should try to pass. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`<object>`",
        "example": "<object>"
      },
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/object-alt/)"
      }
    }
  },
  "lighthouse-core/audits/accessibility/object-alt.js | failureTitle": {
    "message": "$MARKDOWN_SNIPPET_0$ elements do not have $MARKDOWN_SNIPPET_1$ text",
    "description": "Title of an accesibility audit that evaluates if all object elements have an alt HTML attribute that describes their contents. This title is descriptive of the failing state and is shown to users when there is a failure that needs to be addressed.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`<object>`",
        "example": "<object>"
      },
      "MARKDOWN_SNIPPET_1": {
        "content": "`[alt]`",
        "example": "[alt]"
      }
    },
    "meaning": "Title of an accesibility audit that evaluates if all object elements have an alt HTML attribute that describes their contents. This title is descriptive of the failing state and is shown to users when there is a failure that needs to be addressed."
  },
  "lighthouse-core/audits/accessibility/object-alt.js | title": {
    "message": "$MARKDOWN_SNIPPET_0$ elements have $MARKDOWN_SNIPPET_1$ text",
    "description": "Title of an accesibility audit that evaluates if all object elements have an alt HTML attribute that describes their contents. This title is descriptive of the successful state and is shown to users when no user action is required.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`<object>`",
        "example": "<object>"
      },
      "MARKDOWN_SNIPPET_1": {
        "content": "`[alt]`",
        "example": "[alt]"
      }
    },
    "meaning": "Title of an accesibility audit that evaluates if all object elements have an alt HTML attribute that describes their contents. This title is descriptive of the successful state and is shown to users when no user action is required."
  },
  "lighthouse-core/audits/accessibility/tabindex.js | description": {
    "message": "A value greater than 0 implies an explicit navigation ordering. Although technically valid, this often creates frustrating experiences for users who rely on assistive technologies. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user *why* they should try to pass. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/tabindex/)"
      }
    }
  },
  "lighthouse-core/audits/accessibility/tabindex.js | failureTitle": {
    "message": "Some elements have a $MARKDOWN_SNIPPET_0$ value greater than 0",
    "description": "Title of an accesibility audit that evaluates if any elements have custom tabindex HTML attributes that might frustrate users of assitive technology. This title is descriptive of the failing state and is shown to users when there is a failure that needs to be addressed.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`[tabindex]`",
        "example": "[tabindex]"
      }
    }
  },
  "lighthouse-core/audits/accessibility/tabindex.js | title": {
    "message": "No element has a $MARKDOWN_SNIPPET_0$ value greater than 0",
    "description": "Title of an accesibility audit that evaluates if any elements have custom tabindex HTML attributes that might frustrate users of assitive technology. This title is descriptive of the successful state and is shown to users when no user action is required.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`[tabindex]`",
        "example": "[tabindex]"
      }
    }
  },
  "lighthouse-core/audits/accessibility/td-headers-attr.js | description": {
    "message": "Screen readers have features to make navigating tables easier. Ensuring $MARKDOWN_SNIPPET_0$ cells using the $MARKDOWN_SNIPPET_1$ attribute only refer to other cells in the same table may improve the experience for screen reader users. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user *why* they should try to pass. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`<td>`",
        "example": "<td>"
      },
      "MARKDOWN_SNIPPET_1": {
        "content": "`[headers]`",
        "example": "[headers]"
      },
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/td-headers-attr/)"
      }
    }
  },
  "lighthouse-core/audits/accessibility/td-headers-attr.js | failureTitle": {
    "message": "Cells in a $MARKDOWN_SNIPPET_0$ element that use the $MARKDOWN_SNIPPET_1$ attribute refer to an element $MARKDOWN_SNIPPET_2$ not found within the same table.",
    "description": "Title of an accesibility audit that evaluates if all table cell elements in a table that use the headers HTML attribute use it correctly to refer to header cells within the same table. This title is descriptive of the failing state and is shown to users when there is a failure that needs to be addressed.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`<table>`",
        "example": "<table>"
      },
      "MARKDOWN_SNIPPET_1": {
        "content": "`[headers]`",
        "example": "[headers]"
      },
      "MARKDOWN_SNIPPET_2": {
        "content": "`id`",
        "example": "id"
      }
    }
  },
  "lighthouse-core/audits/accessibility/td-headers-attr.js | title": {
    "message": "Cells in a $MARKDOWN_SNIPPET_0$ element that use the $MARKDOWN_SNIPPET_1$ attribute refer to table cells within the same table.",
    "description": "Title of an accesibility audit that evaluates if all table cell elements in a table that use the headers HTML attribute use it correctly to refer to header cells within the same table. This title is descriptive of the successful state and is shown to users when no user action is required.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`<table>`",
        "example": "<table>"
      },
      "MARKDOWN_SNIPPET_1": {
        "content": "`[headers]`",
        "example": "[headers]"
      }
    }
  },
  "lighthouse-core/audits/accessibility/th-has-data-cells.js | description": {
    "message": "Screen readers have features to make navigating tables easier. Ensuring table headers always refer to some set of cells may improve the experience for screen reader users. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user *why* they should try to pass. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/th-has-data-cells/)"
      }
    }
  },
  "lighthouse-core/audits/accessibility/th-has-data-cells.js | failureTitle": {
    "message": "$MARKDOWN_SNIPPET_0$ elements and elements with $MARKDOWN_SNIPPET_1$ do not have data cells they describe.",
    "description": "Title of an accesibility audit that evaluates if all table header elements have children. This title is descriptive of the failing state and is shown to users when there is a failure that needs to be addressed.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`<th>`",
        "example": "<th>"
      },
      "MARKDOWN_SNIPPET_1": {
        "content": "`[role=\"columnheader\"/\"rowheader\"]`",
        "example": "[role=\"columnheader\"/\"rowheader\"]"
      }
    }
  },
  "lighthouse-core/audits/accessibility/th-has-data-cells.js | title": {
    "message": "$MARKDOWN_SNIPPET_0$ elements and elements with $MARKDOWN_SNIPPET_1$ have data cells they describe.",
    "description": "Title of an accesibility audit that evaluates if all table header elements have children. This title is descriptive of the successful state and is shown to users when no user action is required.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`<th>`",
        "example": "<th>"
      },
      "MARKDOWN_SNIPPET_1": {
        "content": "`[role=\"columnheader\"/\"rowheader\"]`",
        "example": "[role=\"columnheader\"/\"rowheader\"]"
      }
    }
  },
  "lighthouse-core/audits/accessibility/valid-lang.js | description": {
    "message": "Specifying a valid $LINK_START_0$BCP 47 language$LINK_END_0$ on elements helps ensure that text is pronounced correctly by a screen reader. $LINK_START_1$Learn more$LINK_END_1$.",
    "description": "Description of a Lighthouse audit that tells the user *why* they should try to pass. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://www.w3.org/International/questions/qa-choosing-language-tags#question)"
      },
      "LINK_START_1": {
        "content": "["
      },
      "LINK_END_1": {
        "content": "](https://web.dev/valid-lang/)"
      }
    }
  },
  "lighthouse-core/audits/accessibility/valid-lang.js | failureTitle": {
    "message": "$MARKDOWN_SNIPPET_0$ attributes do not have a valid value",
    "description": "Title of an accesibility audit that evaluates if all lang HTML attributes are valid BCP 47 languages. This title is descriptive of the failing state and is shown to users when there is a failure that needs to be addressed.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`[lang]`",
        "example": "[lang]"
      }
    }
  },
  "lighthouse-core/audits/accessibility/valid-lang.js | title": {
    "message": "$MARKDOWN_SNIPPET_0$ attributes have a valid value",
    "description": "Title of an accesibility audit that evaluates if all lang HTML attributes are valid BCP 47 languages. This title is descriptive of the successful state and is shown to users when no user action is required.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`[lang]`",
        "example": "[lang]"
      }
    }
  },
  "lighthouse-core/audits/accessibility/video-caption.js | description": {
    "message": "When a video provides a caption it is easier for deaf and hearing impaired users to access its information. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user *why* they should try to pass. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/video-caption/)"
      }
    }
  },
  "lighthouse-core/audits/accessibility/video-caption.js | failureTitle": {
    "message": "$MARKDOWN_SNIPPET_0$ elements do not contain a $MARKDOWN_SNIPPET_1$ element with $MARKDOWN_SNIPPET_2$.",
    "description": "Title of an accesibility audit that evaluates if all video elements contain a child track element that has captions describing their audio. This title is descriptive of the failing state and is shown to users when there is a failure that needs to be addressed.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`<video>`",
        "example": "<video>"
      },
      "MARKDOWN_SNIPPET_1": {
        "content": "`<track>`",
        "example": "<track>"
      },
      "MARKDOWN_SNIPPET_2": {
        "content": "`[kind=\"captions\"]`",
        "example": "[kind=\"captions\"]"
      }
    },
    "meaning": "Title of an accesibility audit that evaluates if all video elements contain a child track element that has captions describing their audio. This title is descriptive of the failing state and is shown to users when there is a failure that needs to be addressed."
  },
  "lighthouse-core/audits/accessibility/video-caption.js | title": {
    "message": "$MARKDOWN_SNIPPET_0$ elements contain a $MARKDOWN_SNIPPET_1$ element with $MARKDOWN_SNIPPET_2$",
    "description": "Title of an accesibility audit that evaluates if all video elements contain a child track element that has captions describing their audio. This title is descriptive of the successful state and is shown to users when no user action is required.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`<video>`",
        "example": "<video>"
      },
      "MARKDOWN_SNIPPET_1": {
        "content": "`<track>`",
        "example": "<track>"
      },
      "MARKDOWN_SNIPPET_2": {
        "content": "`[kind=\"captions\"]`",
        "example": "[kind=\"captions\"]"
      }
    },
    "meaning": "Title of an accesibility audit that evaluates if all video elements contain a child track element that has captions describing their audio. This title is descriptive of the successful state and is shown to users when no user action is required."
  },
  "lighthouse-core/audits/accessibility/video-description.js | description": {
    "message": "Audio descriptions provide relevant information for videos that dialogue cannot, such as facial expressions and scenes. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user *why* they should try to pass. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/video-description/)"
      }
    }
  },
  "lighthouse-core/audits/accessibility/video-description.js | failureTitle": {
    "message": "$MARKDOWN_SNIPPET_0$ elements do not contain a $MARKDOWN_SNIPPET_1$ element with $MARKDOWN_SNIPPET_2$.",
    "description": "Title of an accesibility audit that evaluates if all video elements have child track elements that contain a description of the video content. This title is descriptive of the failing state and is shown to users when there is a failure that needs to be addressed.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`<video>`",
        "example": "<video>"
      },
      "MARKDOWN_SNIPPET_1": {
        "content": "`<track>`",
        "example": "<track>"
      },
      "MARKDOWN_SNIPPET_2": {
        "content": "`[kind=\"description\"]`",
        "example": "[kind=\"description\"]"
      }
    },
    "meaning": "Title of an accesibility audit that evaluates if all video elements have child track elements that contain a description of the video content. This title is descriptive of the failing state and is shown to users when there is a failure that needs to be addressed."
  },
  "lighthouse-core/audits/accessibility/video-description.js | title": {
    "message": "$MARKDOWN_SNIPPET_0$ elements contain a $MARKDOWN_SNIPPET_1$ element with $MARKDOWN_SNIPPET_2$",
    "description": "Title of an accesibility audit that evaluates if all video elements have child track elements that contain a description of the video content. This title is descriptive of the successful state and is shown to users when no user action is required.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`<video>`",
        "example": "<video>"
      },
      "MARKDOWN_SNIPPET_1": {
        "content": "`<track>`",
        "example": "<track>"
      },
      "MARKDOWN_SNIPPET_2": {
        "content": "`[kind=\"description\"]`",
        "example": "[kind=\"description\"]"
      }
    },
    "meaning": "Title of an accesibility audit that evaluates if all video elements have child track elements that contain a description of the video content. This title is descriptive of the successful state and is shown to users when no user action is required."
  },
  "lighthouse-core/audits/apple-touch-icon.js | description": {
    "message": "For ideal appearance on iOS when users add a progressive web app to the home screen, define an $MARKDOWN_SNIPPET_0$. It must point to a non-transparent 192px (or 180px) square PNG. $LINK_START_0$Learn More$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user that having an apple-touch-icon allows websites to include an app icon to their installed progressive web apps, similar to a native app. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. \"apple-touch-icon\" is an HTML attribute value and should not be translated.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`apple-touch-icon`",
        "example": "apple-touch-icon"
      },
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/apple-touch-icon/)"
      }
    }
  },
  "lighthouse-core/audits/apple-touch-icon.js | failureTitle": {
    "message": "Does not provide a valid $MARKDOWN_SNIPPET_0$",
    "description": "Title of a Lighthouse audit that tells the user that their site contains a vaild touch icon. This descriptive title is shown when the page does not contain a valid iOS touch icon. \"apple-touch-icon\" is an HTML attribute value and should not be translated.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`apple-touch-icon`",
        "example": "apple-touch-icon"
      }
    }
  },
  "lighthouse-core/audits/apple-touch-icon.js | precomposedWarning": {
    "message": "$MARKDOWN_SNIPPET_0$ is out of date; $MARKDOWN_SNIPPET_1$ is preferred.",
    "description": "Warning that HTML attribute `apple-touch-icon-precomposed` should not be used in favor of `apple-touch-icon`.  \"apple-touch-icon-precomposed\" and \"apple-touch-icon\" are HTML attribute values and should not be translated.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`apple-touch-icon-precomposed`",
        "example": "apple-touch-icon-precomposed"
      },
      "MARKDOWN_SNIPPET_1": {
        "content": "`apple-touch-icon`",
        "example": "apple-touch-icon"
      }
    }
  },
  "lighthouse-core/audits/apple-touch-icon.js | title": {
    "message": "Provides a valid $MARKDOWN_SNIPPET_0$",
    "description": "Title of a Lighthouse audit that tells the user that their site contains a vaild touch icon. This descriptive title is shown when the page contains a valid iOS touch icon. \"apple-touch-icon\" is an HTML attribute value and should not be translated.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`apple-touch-icon`",
        "example": "apple-touch-icon"
      }
    }
  },
  "lighthouse-core/audits/bootup-time.js | chromeExtensionsWarning": {
    "message": "Chrome extensions negatively affected this page's load performance. Try auditing the page in incognito mode or from a Chrome profile without extensions.",
    "description": "A message displayed in a Lighthouse audit result warning that Chrome extensions on the user's system substantially affected Lighthouse's measurements and instructs the user on how to run again without those extensions."
  },
  "lighthouse-core/audits/bootup-time.js | columnScriptEval": {
    "message": "Script Evaluation",
    "description": "Label for a time column in a data table; entries will be the number of milliseconds spent evaluating script for every script loaded by the page."
  },
  "lighthouse-core/audits/bootup-time.js | columnScriptParse": {
    "message": "Script Parse",
    "description": "Label for a time column in a data table; entries will be the number of milliseconds spent parsing script files for every script loaded by the page."
  },
  "lighthouse-core/audits/bootup-time.js | columnTotal": {
    "message": "Total CPU Time",
    "description": "Label for the total time column in a data table; entries will be the number of milliseconds spent executing per resource loaded by the page."
  },
  "lighthouse-core/audits/bootup-time.js | description": {
    "message": "Consider reducing the time spent parsing, compiling, and executing JS. You may find delivering smaller JS payloads helps with this. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user that they should reduce the amount of time spent executing javascript and one method of doing so. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/bootup-time)"
      }
    }
  },
  "lighthouse-core/audits/bootup-time.js | failureTitle": {
    "message": "Reduce JavaScript execution time",
    "description": "Title of a diagnostic audit that provides detail on the time spent executing javascript files during the load. This imperative title is shown to users when there is a significant amount of execution time that could be reduced."
  },
  "lighthouse-core/audits/bootup-time.js | title": {
    "message": "JavaScript execution time",
    "description": "Title of a diagnostic audit that provides detail on the time spent executing javascript files during the load. This descriptive title is shown to users when the amount is acceptable and no user action is required."
  },
  "lighthouse-core/audits/byte-efficiency/efficient-animated-content.js | description": {
    "message": "Large GIFs are inefficient for delivering animated content. Consider using MPEG4/WebM videos for animations and PNG/WebP for static images instead of GIF to save network bytes. $LINK_START_0$Learn more$LINK_END_0$",
    "description": "Description of a Lighthouse audit that tells the user *why* they should use video instead of GIF format for delivering animated content. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/efficient-animated-content)"
      }
    }
  },
  "lighthouse-core/audits/byte-efficiency/efficient-animated-content.js | title": {
    "message": "Use video formats for animated content",
    "description": "Imperative title of a Lighthouse audit that tells the user to use video formats rather than animated GIFs, which are wasteful. This is displayed in a list of audit titles that Lighthouse generates."
  },
  "lighthouse-core/audits/byte-efficiency/offscreen-images.js | description": {
    "message": "Consider lazy-loading offscreen and hidden images after all critical resources have finished loading to lower time to interactive. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user *why* they should defer loading offscreen images. Offscreen images are images located outside of the visible browser viewport. As they are unseen by the user and slow down page load, they should be loaded later, closer to when the user is going to see them. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/offscreen-images)"
      }
    }
  },
  "lighthouse-core/audits/byte-efficiency/offscreen-images.js | title": {
    "message": "Defer offscreen images",
    "description": "Imperative title of a Lighthouse audit that tells the user to defer loading offscreen images. Offscreen images are images located outside of the visible browser viewport. As they are unseen by the user and slow down page load, they should be loaded later, closer to when the user is going to see them. This is displayed in a list of audit titles that Lighthouse generates."
  },
  "lighthouse-core/audits/byte-efficiency/render-blocking-resources.js | description": {
    "message": "Resources are blocking the first paint of your page. Consider delivering critical JS/CSS inline and deferring all non-critical JS/styles. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user *why* they should reduce or remove network resources that block the initial render of the page. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/render-blocking-resources)"
      }
    }
  },
  "lighthouse-core/audits/byte-efficiency/render-blocking-resources.js | title": {
    "message": "Eliminate render-blocking resources",
    "description": "Imperative title of a Lighthouse audit that tells the user to reduce or remove network resources that block the initial render of the page. This is displayed in a list of audit titles that Lighthouse generates."
  },
  "lighthouse-core/audits/byte-efficiency/total-byte-weight.js | description": {
    "message": "Large network payloads cost users real money and are highly correlated with long load times. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user *why* they should reduce the size of the network resources required by the page. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/total-byte-weight)"
      }
    }
  },
  "lighthouse-core/audits/byte-efficiency/total-byte-weight.js | displayValue": {
    "message": "Total size was $CUSTOM_ICU_0$ KB",
    "description": "Used to summarize the total byte size of the page and all its network requests. The `{totalBytes}` placeholder will be replaced with the total byte sizes, shown in kilobytes (e.g. 142 KB)",
    "placeholders": {
      "CUSTOM_ICU_0": {
        "content": "{totalBytes, number, bytes}",
        "example": "499"
      }
    }
  },
  "lighthouse-core/audits/byte-efficiency/total-byte-weight.js | failureTitle": {
    "message": "Avoid enormous network payloads",
    "description": "Title of a diagnostic audit that provides detail on large network resources required during page load. 'Payloads' is roughly equivalent to 'resources'. This imperative title is shown to users when there is a significant amount of execution time that could be reduced."
  },
  "lighthouse-core/audits/byte-efficiency/total-byte-weight.js | title": {
    "message": "Avoids enormous network payloads",
    "description": "Title of a diagnostic audit that provides detail on large network resources required during page load. 'Payloads' is roughly equivalent to 'resources'. This descriptive title is shown to users when the amount is acceptable and no user action is required."
  },
  "lighthouse-core/audits/byte-efficiency/unminified-css.js | description": {
    "message": "Minifying CSS files can reduce network payload sizes. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user *why* they should minify (remove whitespace) the page's CSS code. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/unminified-css)"
      }
    }
  },
  "lighthouse-core/audits/byte-efficiency/unminified-css.js | title": {
    "message": "Minify CSS",
    "description": "Imperative title of a Lighthouse audit that tells the user to minify (remove whitespace) the page's CSS code. This is displayed in a list of audit titles that Lighthouse generates."
  },
  "lighthouse-core/audits/byte-efficiency/unminified-javascript.js | description": {
    "message": "Minifying JavaScript files can reduce payload sizes and script parse time. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user *why* they should minify the page’s JS code to reduce file size. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/unminified-javascript)"
      }
    }
  },
  "lighthouse-core/audits/byte-efficiency/unminified-javascript.js | title": {
    "message": "Minify JavaScript",
    "description": "Imperative title of a Lighthouse audit that tells the user to minify the page’s JS code to reduce file size. This is displayed in a list of audit titles that Lighthouse generates."
  },
  "lighthouse-core/audits/byte-efficiency/unused-css-rules.js | description": {
    "message": "Remove dead rules from stylesheets and defer the loading of CSS not used for above-the-fold content to reduce unnecessary bytes consumed by network activity. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user *why* they should defer loading any content in CSS that isn’t needed at page load. This is displayed after a user expands the section to see more. No word length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/unused-css-rules)"
      }
    }
  },
  "lighthouse-core/audits/byte-efficiency/unused-css-rules.js | title": {
    "message": "Remove unused CSS",
    "description": "Imperative title of a Lighthouse audit that tells the user to remove content from their CSS that isn’t needed immediately and instead load that content at a later time. This is displayed in a list of audit titles that Lighthouse generates."
  },
  "lighthouse-core/audits/byte-efficiency/unused-javascript.js | description": {
    "message": "Remove unused JavaScript to reduce bytes consumed by network activity.",
    "description": "Description of a Lighthouse audit that tells the user *why* they should remove JavaScript that is never needed/evaluated by the browser. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation."
  },
  "lighthouse-core/audits/byte-efficiency/unused-javascript.js | title": {
    "message": "Remove unused JavaScript",
    "description": "Imperative title of a Lighthouse audit that tells the user to remove JavaScript that is never evaluated during page load. This is displayed in a list of audit titles that Lighthouse generates."
  },
  "lighthouse-core/audits/byte-efficiency/uses-long-cache-ttl.js | description": {
    "message": "A long cache lifetime can speed up repeat visits to your page. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user *why* they need to adopt a long cache lifetime policy. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/uses-long-cache-ttl)"
      }
    }
  },
  "lighthouse-core/audits/byte-efficiency/uses-long-cache-ttl.js | displayValue": {
    "message": "{itemCount, plural,\n    =1 {1 resource found}\n    other {# resources found}\n    }",
    "description": "[ICU Syntax] Label for the audit identifying network resources with inefficient cache values. Clicking this will expand the audit to show the resources."
  },
  "lighthouse-core/audits/byte-efficiency/uses-long-cache-ttl.js | failureTitle": {
    "message": "Serve static assets with an efficient cache policy",
    "description": "Title of a diagnostic audit that provides details on the any page resources that could have been served with more efficient cache policies. Cache refers to browser disk cache, which keeps old versions of network resources around for future use. This imperative title is shown to users when there is a significant amount of assets served with poor cache policies."
  },
  "lighthouse-core/audits/byte-efficiency/uses-long-cache-ttl.js | title": {
    "message": "Uses efficient cache policy on static assets",
    "description": "Title of a diagnostic audit that provides detail on the cache policy applies to the page's static assets. Cache refers to browser disk cache, which keeps old versions of network resources around for future use. This is displayed in a list of audit titles that Lighthouse generates."
  },
  "lighthouse-core/audits/byte-efficiency/uses-optimized-images.js | description": {
    "message": "Optimized images load faster and consume less cellular data. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user *why* they need to efficiently encode images. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/uses-optimized-images)"
      }
    }
  },
  "lighthouse-core/audits/byte-efficiency/uses-optimized-images.js | title": {
    "message": "Efficiently encode images",
    "description": "Imperative title of a Lighthouse audit that tells the user to encode images with optimization (better compression). This is displayed in a list of audit titles that Lighthouse generates."
  },
  "lighthouse-core/audits/byte-efficiency/uses-responsive-images.js | description": {
    "message": "Serve images that are appropriately-sized to save cellular data and improve load time. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user *why* they need to serve appropriately sized images. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/uses-responsive-images)"
      }
    }
  },
  "lighthouse-core/audits/byte-efficiency/uses-responsive-images.js | title": {
    "message": "Properly size images",
    "description": "Imperative title of a Lighthouse audit that tells the user to resize images to match the display dimensions. This is displayed in a list of audit titles that Lighthouse generates."
  },
  "lighthouse-core/audits/byte-efficiency/uses-text-compression.js | description": {
    "message": "Text-based resources should be served with compression (gzip, deflate or brotli) to minimize total network bytes. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user *why* their text-based resources should be served with compression (like gzip). This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/uses-text-compression)"
      }
    }
  },
  "lighthouse-core/audits/byte-efficiency/uses-text-compression.js | title": {
    "message": "Enable text compression",
    "description": "Imperative title of a Lighthouse audit that tells the user to enable text compression (like gzip) in order to enhance the performance of a page. This is displayed in a list of audit titles that Lighthouse generates."
  },
  "lighthouse-core/audits/byte-efficiency/uses-webp-images.js | description": {
    "message": "Image formats like JPEG 2000, JPEG XR, and WebP often provide better compression than PNG or JPEG, which means faster downloads and less data consumption. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user *why* they should use newer and more efficient image formats. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/uses-webp-images)"
      }
    }
  },
  "lighthouse-core/audits/byte-efficiency/uses-webp-images.js | title": {
    "message": "Serve images in next-gen formats",
    "description": "Imperative title of a Lighthouse audit that tells the user to serve images in newer and more efficient image formats in order to enhance the performance of a page. A non-modern image format was designed 20+ years ago. This is displayed in a list of audit titles that Lighthouse generates."
  },
  "lighthouse-core/audits/content-width.js | description": {
    "message": "If the width of your app's content doesn't match the width of the viewport, your app might not be optimized for mobile screens. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user why they should care that a site's content size should match its viewport size, which is the size of the screen the site is displayed on. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/content-width)"
      }
    }
  },
  "lighthouse-core/audits/content-width.js | explanation": {
    "message": "The viewport size of $ICU_0$px does not match the window size of $ICU_1$px.",
    "description": "Explanatory message stating that the viewport size and window size differ.",
    "placeholders": {
      "ICU_0": {
        "content": "{innerWidth}",
        "example": "100"
      },
      "ICU_1": {
        "content": "{outerWidth}",
        "example": "101"
      }
    }
  },
  "lighthouse-core/audits/content-width.js | failureTitle": {
    "message": "Content is not sized correctly for the viewport",
    "description": "Title of a Lighthouse audit that provides detail on the content size of a web site compared to the viewport, which is the size of the screen the site is displayed on. This descriptive title is shown to users when the site's content is not sized appropriately."
  },
  "lighthouse-core/audits/content-width.js | title": {
    "message": "Content is sized correctly for the viewport",
    "description": "Title of a Lighthouse audit that provides detail on the content size of a web site compared to the viewport, which is the size of the screen the site is displayed on. This descriptive title is shown to users when the site's content is sized appropriately."
  },
  "lighthouse-core/audits/critical-request-chains.js | description": {
    "message": "The Critical Request Chains below show you what resources are loaded with a high priority. Consider reducing the length of chains, reducing the download size of resources, or deferring the download of unnecessary resources to improve page load. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user *why* they should reduce the depth of critical network requests to enhance initial load of a page . This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/critical-request-chains)"
      }
    }
  },
  "lighthouse-core/audits/critical-request-chains.js | displayValue": {
    "message": "{itemCount, plural,\n    =1 {1 chain found}\n    other {# chains found}\n    }",
    "description": "[ICU Syntax] Label for an audit identifying the number of sequences of dependent network requests used to load the page."
  },
  "lighthouse-core/audits/critical-request-chains.js | title": {
    "message": "Minimize Critical Requests Depth",
    "description": "Imperative title of a Lighthouse audit that tells the user to reduce the depth of critical network requests to enhance initial load of a page. Critical request chains are series of dependent network requests that are important for page rendering. For example, here's a 4-request-deep chain: The biglogo.jpg image is required, but is requested via the styles.css style code, which is requested by the initialize.js javascript, which is requested by the page's HTML. This is displayed in a list of audit titles that Lighthouse generates."
  },
  "lighthouse-core/audits/deprecations.js | columnDeprecate": {
    "message": "Deprecation / Warning",
    "description": "Header of the table column which displays the warning message describing use of a deprecated API by code running in the web page."
  },
  "lighthouse-core/audits/deprecations.js | columnLine": {
    "message": "Line",
    "description": "Table column header for line of code (eg. 432) that is using a deprecated API."
  },
  "lighthouse-core/audits/deprecations.js | description": {
    "message": "Deprecated APIs will eventually be removed from the browser. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user why they should not use deprecated APIs on their page. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/deprecations)"
      }
    }
  },
  "lighthouse-core/audits/deprecations.js | displayValue": {
    "message": "{itemCount, plural,\n    =1 {1 warning found}\n    other {# warnings found}\n    }",
    "description": "[ICU Syntax] Label for the audit identifying the number of warnings generated by using deprecated APIs."
  },
  "lighthouse-core/audits/deprecations.js | failureTitle": {
    "message": "Uses deprecated APIs",
    "description": "Title of a Lighthouse audit that provides detail on the use of deprecated APIs. This descriptive title is shown to users when the page uses deprecated APIs."
  },
  "lighthouse-core/audits/deprecations.js | title": {
    "message": "Avoids deprecated APIs",
    "description": "Title of a Lighthouse audit that provides detail on the use of deprecated APIs. This descriptive title is shown to users when the page does not use deprecated APIs."
  },
  "lighthouse-core/audits/dobetterweb/appcache-manifest.js | description": {
    "message": "Application Cache is deprecated. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user why they should not use the Application Cache API. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/appcache-manifest)"
      }
    }
  },
  "lighthouse-core/audits/dobetterweb/appcache-manifest.js | displayValue": {
    "message": "Found \"$ICU_0$\"",
    "description": "Label for the audit identifying uses of the Application Cache.",
    "placeholders": {
      "ICU_0": {
        "content": "{AppCacheManifest}",
        "example": "clock.appcache"
      }
    }
  },
  "lighthouse-core/audits/dobetterweb/appcache-manifest.js | failureTitle": {
    "message": "Uses Application Cache",
    "description": "Title of a Lighthouse audit that provides detail on the use of the Application Cache API. This descriptive title is shown to users when they do use the Application Cache API, which is considered bad practice."
  },
  "lighthouse-core/audits/dobetterweb/appcache-manifest.js | title": {
    "message": "Avoids Application Cache",
    "description": "Title of a Lighthouse audit that provides detail on the use of the Application Cache API. This descriptive title is shown to users when they do not use the Application Cache API."
  },
  "lighthouse-core/audits/dobetterweb/doctype.js | description": {
    "message": "Specifying a doctype prevents the browser from switching to quirks-mode. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user why they should define an HTML doctype. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/doctype)"
      }
    }
  },
  "lighthouse-core/audits/dobetterweb/doctype.js | explanationBadDoctype": {
    "message": "Doctype name must be the lowercase string $MARKDOWN_SNIPPET_0$",
    "description": "Explanatory message stating that the doctype is set, but is not \"html\" and is therefore invalid.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`html`",
        "example": "html"
      }
    }
  },
  "lighthouse-core/audits/dobetterweb/doctype.js | explanationNoDoctype": {
    "message": "Document must contain a doctype",
    "description": "Explanatory message stating that the document has no doctype."
  },
  "lighthouse-core/audits/dobetterweb/doctype.js | explanationPublicId": {
    "message": "Expected publicId to be an empty string",
    "description": "Explanatory message stating that the publicId field is not empty."
  },
  "lighthouse-core/audits/dobetterweb/doctype.js | explanationSystemId": {
    "message": "Expected systemId to be an empty string",
    "description": "Explanatory message stating that the systemId field is not empty."
  },
  "lighthouse-core/audits/dobetterweb/doctype.js | failureTitle": {
    "message": "Page lacks the HTML doctype, thus triggering quirks-mode",
    "description": "Title of a Lighthouse audit that provides detail on the doctype of a page. This descriptive title is shown to users when the page's doctype is not set to HTML."
  },
  "lighthouse-core/audits/dobetterweb/doctype.js | title": {
    "message": "Page has the HTML doctype",
    "description": "Title of a Lighthouse audit that provides detail on the doctype of a page. This descriptive title is shown to users when the pages's doctype is set to HTML."
  },
  "lighthouse-core/audits/dobetterweb/dom-size.js | columnElement": {
    "message": "Element",
    "description": "Table column header for the DOM element. Each DOM element is described with its HTML representation."
  },
  "lighthouse-core/audits/dobetterweb/dom-size.js | columnStatistic": {
    "message": "Statistic",
    "description": "Table column header for the type of statistic. These statistics describe how big the DOM is (count of DOM elements, children, depth)."
  },
  "lighthouse-core/audits/dobetterweb/dom-size.js | columnValue": {
    "message": "Value",
    "description": "Table column header for the observed value of the DOM statistic."
  },
  "lighthouse-core/audits/dobetterweb/dom-size.js | description": {
    "message": "Browser engineers recommend pages contain fewer than ~1,500 DOM elements. The sweet spot is a tree depth < 32 elements and fewer than 60 children/parent element. A large DOM can increase memory usage, cause longer $LINK_START_0$style calculations$LINK_END_0$, and produce costly $LINK_START_1$layout reflows$LINK_END_1$. $LINK_START_2$Learn more$LINK_END_2$.",
    "description": "Description of a Lighthouse audit that tells the user *why* they should reduce the size of the web page's DOM. The size of a DOM is characterized by the total number of DOM elements and greatest DOM depth. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://developers.google.com/web/fundamentals/performance/rendering/reduce-the-scope-and-complexity-of-style-calculations)"
      },
      "LINK_START_1": {
        "content": "["
      },
      "LINK_END_1": {
        "content": "](https://developers.google.com/speed/articles/reflow)"
      },
      "LINK_START_2": {
        "content": "["
      },
      "LINK_END_2": {
        "content": "](https://web.dev/dom-size)"
      }
    }
  },
  "lighthouse-core/audits/dobetterweb/dom-size.js | displayValue": {
    "message": "{itemCount, plural,\n    =1 {1 element}\n    other {# elements}\n    }",
    "description": "[ICU Syntax] Label for an audit identifying the number of DOM elements found in the page."
  },
  "lighthouse-core/audits/dobetterweb/dom-size.js | failureTitle": {
    "message": "Avoid an excessive DOM size",
    "description": "Title of a diagnostic audit that provides detail on the size of the web page's DOM. The size of a DOM is characterized by the total number of DOM elements and greatest DOM depth. This imperative title is shown to users when there is a significant amount of execution time that could be reduced."
  },
  "lighthouse-core/audits/dobetterweb/dom-size.js | statisticDOMDepth": {
    "message": "Maximum DOM Depth",
    "description": "Label for the numeric value of the maximum depth in the page's DOM tree."
  },
  "lighthouse-core/audits/dobetterweb/dom-size.js | statisticDOMElements": {
    "message": "Total DOM Elements",
    "description": "Label for the total number of DOM elements found in the page."
  },
  "lighthouse-core/audits/dobetterweb/dom-size.js | statisticDOMWidth": {
    "message": "Maximum Child Elements",
    "description": "Label for the numeric value of the maximum number of children any DOM element in the page has. The element described will have the most children in the page."
  },
  "lighthouse-core/audits/dobetterweb/dom-size.js | title": {
    "message": "Avoids an excessive DOM size",
    "description": "Title of a diagnostic audit that provides detail on the size of the web page's DOM. The size of a DOM is characterized by the total number of DOM elements and greatest DOM depth. This descriptive title is shown to users when the amount is acceptable and no user action is required."
  },
  "lighthouse-core/audits/dobetterweb/external-anchors-use-rel-noopener.js | columnRel": {
    "message": "Rel",
    "description": "Label for a column in a data table; entries will be the values of the html \"rel\" attribute from link in a page."
  },
  "lighthouse-core/audits/dobetterweb/external-anchors-use-rel-noopener.js | columnTarget": {
    "message": "Target",
    "description": "Label for a column in a data table; entries will be the target attribute of a link. Each entry is either an empty string or a string like `_blank`."
  },
  "lighthouse-core/audits/dobetterweb/external-anchors-use-rel-noopener.js | description": {
    "message": "Add $MARKDOWN_SNIPPET_0$ or $MARKDOWN_SNIPPET_1$ to any external links to improve performance and prevent security vulnerabilities. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user why and how they should secure cross-origin links. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`rel=\"noopener\"`",
        "example": "rel=\"noopener\""
      },
      "MARKDOWN_SNIPPET_1": {
        "content": "`rel=\"noreferrer\"`",
        "example": "rel=\"noreferrer\""
      },
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/external-anchors-use-rel-noopener)"
      }
    }
  },
  "lighthouse-core/audits/dobetterweb/external-anchors-use-rel-noopener.js | failureTitle": {
    "message": "Links to cross-origin destinations are unsafe",
    "description": "Title of a Lighthouse audit that provides detail on the cross-origin links that the web page contains, and whether the links can be considered safe. This descriptive title is shown to users when not all links can be considered safe."
  },
  "lighthouse-core/audits/dobetterweb/external-anchors-use-rel-noopener.js | title": {
    "message": "Links to cross-origin destinations are safe",
    "description": "Title of a Lighthouse audit that provides detail on the cross-origin links that the web page contains, and whether the links can be considered safe. This descriptive title is shown to users when all links are safe."
  },
  "lighthouse-core/audits/dobetterweb/external-anchors-use-rel-noopener.js | warning": {
    "message": "Unable to determine the destination for anchor ($ICU_0$). If not used as a hyperlink, consider removing target=_blank.",
    "description": "Warning that some links' destinations cannot be determined and therefore the audit cannot evaluate the link's safety.",
    "placeholders": {
      "ICU_0": {
        "content": "{anchorHTML}",
        "example": "<a target=\"_blank\">"
      }
    }
  },
  "lighthouse-core/audits/dobetterweb/geolocation-on-start.js | description": {
    "message": "Users are mistrustful of or confused by sites that request their location without context. Consider tying the request to a user action instead. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user why they should not ask for geolocation permissions on load. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/geolocation-on-start)"
      }
    }
  },
  "lighthouse-core/audits/dobetterweb/geolocation-on-start.js | failureTitle": {
    "message": "Requests the geolocation permission on page load",
    "description": "Title of a Lighthouse audit that provides detail on geolocation permissions requests. This descriptive title is shown to users when the page does ask for geolocation permissions on load."
  },
  "lighthouse-core/audits/dobetterweb/geolocation-on-start.js | title": {
    "message": "Avoids requesting the geolocation permission on page load",
    "description": "Title of a Lighthouse audit that provides detail on geolocation permission requests while the page is loading. This descriptive title is shown to users when the page does not ask for geolocation permissions on load."
  },
  "lighthouse-core/audits/dobetterweb/js-libraries.js | columnVersion": {
    "message": "Version",
    "description": "Label for a column in a data table; entries will be the version numbers of the detected Javascript libraries."
  },
  "lighthouse-core/audits/dobetterweb/js-libraries.js | description": {
    "message": "All front-end JavaScript libraries detected on the page. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user what this audit is detecting. This is displayed after a user expands the section to see more. No character length limits.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/js-libraries)"
      }
    }
  },
  "lighthouse-core/audits/dobetterweb/js-libraries.js | title": {
    "message": "Detected JavaScript libraries",
    "description": "Title of a Lighthouse audit that provides detail on the Javascript libraries that are used on the page."
  },
  "lighthouse-core/audits/dobetterweb/no-document-write.js | description": {
    "message": "For users on slow connections, external scripts dynamically injected via $MARKDOWN_SNIPPET_0$ can delay page load by tens of seconds. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user why they should avoid `document.write`. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`document.write()`",
        "example": "document.write()"
      },
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/no-document-write)"
      }
    }
  },
  "lighthouse-core/audits/dobetterweb/no-document-write.js | failureTitle": {
    "message": "Uses $MARKDOWN_SNIPPET_0$",
    "description": "Title of a Lighthouse audit that provides detail on the page's use of the `document.write` API. This descriptive title is shown to users when the page does use `document.write`.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`document.write()`",
        "example": "document.write()"
      }
    }
  },
  "lighthouse-core/audits/dobetterweb/no-document-write.js | title": {
    "message": "Avoids $MARKDOWN_SNIPPET_0$",
    "description": "Title of a Lighthouse audit that provides detail on the page's use of the `document.write` API. This descriptive title is shown to users when the page does not use `document.write`.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`document.write()`",
        "example": "document.write()"
      }
    }
  },
  "lighthouse-core/audits/dobetterweb/no-vulnerable-libraries.js | columnSeverity": {
    "message": "Highest Severity",
    "description": "Label for a column in a data table; entries will be the severity of the vulnerabilities found within a Javascript library."
  },
  "lighthouse-core/audits/dobetterweb/no-vulnerable-libraries.js | columnVersion": {
    "message": "Library Version",
    "description": "Label for a column in a data table; entries will be the version numbers of the Javascript libraries found."
  },
  "lighthouse-core/audits/dobetterweb/no-vulnerable-libraries.js | columnVuln": {
    "message": "Vulnerability Count",
    "description": "Label for a column in a data table; entries will be the counts of JavaScript-library vulnerabilities found."
  },
  "lighthouse-core/audits/dobetterweb/no-vulnerable-libraries.js | description": {
    "message": "Some third-party scripts may contain known security vulnerabilities that are easily identified and exploited by attackers. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user why they should be concerned about the third party Javascript libraries that they use. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/no-vulnerable-libraries)"
      }
    }
  },
  "lighthouse-core/audits/dobetterweb/no-vulnerable-libraries.js | displayValue": {
    "message": "{itemCount, plural,\n    =1 {1 vulnerability detected}\n    other {# vulnerabilities detected}\n    }",
    "description": "[ICU Syntax] Label for the audit identifying the number of vulnerable Javascript libraries found."
  },
  "lighthouse-core/audits/dobetterweb/no-vulnerable-libraries.js | failureTitle": {
    "message": "Includes front-end JavaScript libraries with known security vulnerabilities",
    "description": "Title of a Lighthouse audit that provides detail on Javascript libraries the page uses. This descriptive title is shown to users when some detected Javascript libraries have known security vulnerabilities."
  },
  "lighthouse-core/audits/dobetterweb/no-vulnerable-libraries.js | rowSeverityHigh": {
    "message": "High",
    "description": "Table row value for the severity of a high impact, or dangerous Javascript vulnerability.  Part of a ranking scale in the form: low, medium, high."
  },
  "lighthouse-core/audits/dobetterweb/no-vulnerable-libraries.js | rowSeverityLow": {
    "message": "Low",
    "description": "Table row value for the severity of a small, or low impact Javascript vulnerability.  Part of a ranking scale in the form: low, medium, high."
  },
  "lighthouse-core/audits/dobetterweb/no-vulnerable-libraries.js | rowSeverityMedium": {
    "message": "Medium",
    "description": "Table row value for the severity of a Javascript vulnerability.  Part of a ranking scale in the form: low, medium, high."
  },
  "lighthouse-core/audits/dobetterweb/no-vulnerable-libraries.js | title": {
    "message": "Avoids front-end JavaScript libraries with known security vulnerabilities",
    "description": "Title of a Lighthouse audit that provides detail on Javascript libraries the page uses. This descriptive title is shown to users when all Javascript libraries are free of known security vulnerabilities."
  },
  "lighthouse-core/audits/dobetterweb/notification-on-start.js | description": {
    "message": "Users are mistrustful of or confused by sites that request to send notifications without context. Consider tying the request to user gestures instead. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user why they should not ask for notification permission on load. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/notification-on-start)"
      }
    }
  },
  "lighthouse-core/audits/dobetterweb/notification-on-start.js | failureTitle": {
    "message": "Requests the notification permission on page load",
    "description": "Title of a Lighthouse audit that provides detail on the page's notification permission requests. This descriptive title is shown to users when the page does ask for notification permission on load."
  },
  "lighthouse-core/audits/dobetterweb/notification-on-start.js | title": {
    "message": "Avoids requesting the notification permission on page load",
    "description": "Title of a Lighthouse audit that provides detail on the page's notification permission requests. This descriptive title is shown to users when the page does not ask for notification permission on load."
  },
  "lighthouse-core/audits/dobetterweb/password-inputs-can-be-pasted-into.js | columnFailingElem": {
    "message": "Failing Elements",
    "description": "Table column header for the HTML elements that do not allow pasting of content.",
    "meaning": "Table column header for the HTML elements that do not allow pasting of content."
  },
  "lighthouse-core/audits/dobetterweb/password-inputs-can-be-pasted-into.js | description": {
    "message": "Preventing password pasting undermines good security policy. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user why they should allow pasting of content into password fields. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/password-inputs-can-be-pasted-into)"
      }
    }
  },
  "lighthouse-core/audits/dobetterweb/password-inputs-can-be-pasted-into.js | failureTitle": {
    "message": "Prevents users to paste into password fields",
    "description": "Title of a Lighthouse audit that provides detail on the ability to paste into password fields. This descriptive title is shown to users when the page does not allow pasting of content into password fields."
  },
  "lighthouse-core/audits/dobetterweb/password-inputs-can-be-pasted-into.js | title": {
    "message": "Allows users to paste into password fields",
    "description": "Title of a Lighthouse audit that provides detail on the ability to paste into password fields. This descriptive title is shown to users when the page allows pasting of content into password fields."
  },
  "lighthouse-core/audits/dobetterweb/uses-http2.js | columnProtocol": {
    "message": "Protocol",
    "description": "Label for a column in a data table; entries in the column will be the HTTP Protocol used to make a network request."
  },
  "lighthouse-core/audits/dobetterweb/uses-http2.js | description": {
    "message": "HTTP/2 offers many benefits over HTTP/1.1, including binary headers, multiplexing, and server push. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user why they should use HTTP/2. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/uses-http2)"
      }
    }
  },
  "lighthouse-core/audits/dobetterweb/uses-http2.js | displayValue": {
    "message": "{itemCount, plural,\n    =1 {1 request not served via HTTP/2}\n    other {# requests not served via HTTP/2}\n    }",
    "description": "[ICU Syntax] Label identifying the number of network requests that were not served with HTTP/2."
  },
  "lighthouse-core/audits/dobetterweb/uses-http2.js | failureTitle": {
    "message": "Does not use HTTP/2 for all of its resources",
    "description": "Title of a Lighthouse audit that provides detail on whether the webpage uses HTTP/2 for resources it requests over the network. This descriptive title is shown to users when the page does not use HTTP/2 for its requests."
  },
  "lighthouse-core/audits/dobetterweb/uses-http2.js | title": {
    "message": "Uses HTTP/2 for its own resources",
    "description": "Title of a Lighthouse audit that provides detail on whether the webpage uses HTTP/2 for resources it requests over the network. This descriptive title is shown to users when the page uses HTTP/2 for its requests."
  },
  "lighthouse-core/audits/dobetterweb/uses-passive-event-listeners.js | description": {
    "message": "Consider marking your touch and wheel event listeners as $MARKDOWN_SNIPPET_0$ to improve your page's scroll performance. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user why they should use passive event listeners on the page. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`passive`",
        "example": "passive"
      },
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/uses-passive-event-listeners)"
      }
    }
  },
  "lighthouse-core/audits/dobetterweb/uses-passive-event-listeners.js | failureTitle": {
    "message": "Does not use passive listeners to improve scrolling performance",
    "description": "Title of a Lighthouse audit that provides detail on the page's use of passive event listeners used to improve the scrolling performance of the page. This descriptive title is shown to users when the page does not use passive listeners."
  },
  "lighthouse-core/audits/dobetterweb/uses-passive-event-listeners.js | title": {
    "message": "Uses passive listeners to improve scrolling performance",
    "description": "Title of a Lighthouse audit that provides detail on the page's use of passive event listeners used to improve the scrolling performance of the page. This descriptive title is shown to users when the page does use passive listeners."
  },
  "lighthouse-core/audits/errors-in-console.js | columnDesc": {
    "message": "Description",
    "description": "Label for a column in a data table; entries in the column will be the descriptions of logged browser errors."
  },
  "lighthouse-core/audits/errors-in-console.js | description": {
    "message": "Errors logged to the console indicate unresolved problems. They can come from network request failures and other browser concerns. $LINK_START_0$Learn more$LINK_END_0$",
    "description": "Description of a Lighthouse audit that tells the user why errors being logged to the devtools console are a cause for concern and so should be fixed. This is displayed after a user expands the section to see more. No character length limits.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/errors-in-console)"
      }
    }
  },
  "lighthouse-core/audits/errors-in-console.js | failureTitle": {
    "message": "Browser errors were logged to the console",
    "description": "Title of a Lighthouse audit that provides detail on browser errors. This descriptive title is shown to users when browser errors occurred and were logged into the devtools console."
  },
  "lighthouse-core/audits/errors-in-console.js | title": {
    "message": "No browser errors logged to the console",
    "description": "Title of a Lighthouse audit that provides detail on browser errors. This descriptive title is shown to users when no browser errors were logged into the devtools console."
  },
  "lighthouse-core/audits/font-display.js | description": {
    "message": "Leverage the font-display CSS feature to ensure text is user-visible while webfonts are loading. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user *why* they should use the font-display CSS feature. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/font-display)"
      }
    }
  },
  "lighthouse-core/audits/font-display.js | failureTitle": {
    "message": "Ensure text remains visible during webfont load",
    "description": "Title of a diagnostic audit that provides detail on the load of the page's webfonts. Often the text is invisible for seconds before the webfont resource is loaded. This imperative title is shown to users when there is a significant amount of execution time that could be reduced."
  },
  "lighthouse-core/audits/font-display.js | title": {
    "message": "All text remains visible during webfont loads",
    "description": "Title of a diagnostic audit that provides detail on if all the text on a webpage was visible while the page was loading its webfonts. This descriptive title is shown to users when the amount is acceptable and no user action is required."
  },
  "lighthouse-core/audits/font-display.js | undeclaredFontURLWarning": {
    "message": "Lighthouse was unable to automatically check the font-display value for the following URL: $ICU_0$.",
    "description": "A warning message that is shown when Lighthouse couldn't automatically check some of the page's fonts and that the user will need to manually check it.",
    "placeholders": {
      "ICU_0": {
        "content": "{fontURL}",
        "example": "https://font.cdn.com/"
      }
    }
  },
  "lighthouse-core/audits/image-aspect-ratio.js | columnActual": {
    "message": "Aspect Ratio (Actual)",
    "description": "Label for a column in a data table; entries in the column will be the numeric aspect ratio of the raw (actual) image."
  },
  "lighthouse-core/audits/image-aspect-ratio.js | columnDisplayed": {
    "message": "Aspect Ratio (Displayed)",
    "description": "Label for a column in a data table; entries in the column will be the numeric aspect ratio of an image as displayed in a web page."
  },
  "lighthouse-core/audits/image-aspect-ratio.js | description": {
    "message": "Image display dimensions should match natural aspect ratio. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user why they should maintain the correct aspect ratios for all images. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/image-aspect-ratio)"
      }
    }
  },
  "lighthouse-core/audits/image-aspect-ratio.js | failureTitle": {
    "message": "Displays images with incorrect aspect ratio",
    "description": "Title of a Lighthouse audit that provides detail on the aspect ratios of all images on the page. This descriptive title is shown to users when not all images use correct aspect ratios."
  },
  "lighthouse-core/audits/image-aspect-ratio.js | title": {
    "message": "Displays images with correct aspect ratio",
    "description": "Title of a Lighthouse audit that provides detail on the aspect ratios of all images on the page. This descriptive title is shown to users when all images use correct aspect ratios."
  },
  "lighthouse-core/audits/image-aspect-ratio.js | warningCompute": {
    "message": "Invalid image sizing information $ICU_0$",
    "description": "Warning that the size information for an image was nonsensical.",
    "placeholders": {
      "ICU_0": {
        "content": "{url}",
        "example": "https://image.cdn.com/"
      }
    }
  },
  "lighthouse-core/audits/installable-manifest.js | description": {
    "message": "Browsers can proactively prompt users to add your app to their homescreen, which can lead to higher engagement. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user why installability is important for webapps. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/installable-manifest)"
      }
    }
  },
  "lighthouse-core/audits/installable-manifest.js | failureTitle": {
    "message": "Web app manifest does not meet the installability requirements",
    "description": "Title of a Lighthouse audit that provides detail on if a website is installable as an application. This descriptive title is shown to users when a webapp is not installable."
  },
  "lighthouse-core/audits/installable-manifest.js | title": {
    "message": "Web app manifest meets the installability requirements",
    "description": "Title of a Lighthouse audit that provides detail on if a website is installable as an application. This descriptive title is shown to users when a webapp is installable."
  },
  "lighthouse-core/audits/is-on-https.js | columnInsecureURL": {
    "message": "Insecure URL",
    "description": "Label for a column in a data table; entries in the column will be the URLs of insecure (non-HTTPS) network requests."
  },
  "lighthouse-core/audits/is-on-https.js | description": {
    "message": "All sites should be protected with HTTPS, even ones that don't handle sensitive data. HTTPS prevents intruders from tampering with or passively listening in on the communications between your app and your users, and is a prerequisite for HTTP/2 and many new web platform APIs. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user *why* HTTPS use is important. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/is-on-https)"
      }
    }
  },
  "lighthouse-core/audits/is-on-https.js | displayValue": {
    "message": "{itemCount, plural,\n    =1 {1 insecure request found}\n    other {# insecure requests found}\n    }",
    "description": "[ICU Syntax] Label identifying the number of insecure network requests found by an audit of a web page."
  },
  "lighthouse-core/audits/is-on-https.js | failureTitle": {
    "message": "Does not use HTTPS",
    "description": "Title of a Lighthouse audit that provides detail on the useage of HTTPS on a page. This descriptive title is shown to users when some, or all, requests on the page use HTTP instead of HTTPS."
  },
  "lighthouse-core/audits/is-on-https.js | title": {
    "message": "Uses HTTPS",
    "description": "Title of a Lighthouse audit that provides detail on the useage of HTTPS on a page. This descriptive title is shown to users when all requests on a page are fufilled using HTTPS."
  },
  "lighthouse-core/audits/load-fast-enough-for-pwa.js | description": {
    "message": "A fast page load over a cellular network ensures a good mobile user experience. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user *why* they need to load fast enough on mobile networks. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/load-fast-enough-for-pwa)"
      }
    }
  },
  "lighthouse-core/audits/load-fast-enough-for-pwa.js | displayValueText": {
    "message": "Interactive at $CUSTOM_ICU_0$ s",
    "description": "Label for the audit identifying the time it took for the page to become interactive.",
    "placeholders": {
      "CUSTOM_ICU_0": {
        "content": "{timeInMs, number, seconds}",
        "example": "2.4"
      }
    }
  },
  "lighthouse-core/audits/load-fast-enough-for-pwa.js | displayValueTextWithOverride": {
    "message": "Interactive on simulated mobile network at $CUSTOM_ICU_0$ s",
    "description": "Label for the audit identifying the time it took for the page to become interactive on a mobile network.",
    "placeholders": {
      "CUSTOM_ICU_0": {
        "content": "{timeInMs, number, seconds}",
        "example": "2.4"
      }
    }
  },
  "lighthouse-core/audits/load-fast-enough-for-pwa.js | explanationLoadSlow": {
    "message": "Your page loads too slowly and is not interactive within 10 seconds. Look at the opportunities and diagnostics in the \"Performance\" section to learn how to improve.",
    "description": "Explanatory message displayed when a web page loads too slowly to be considered quickly interactive. This references another Lighthouse auditing category, \"Performance\", that can give additional details on performance debugging."
  },
  "lighthouse-core/audits/load-fast-enough-for-pwa.js | failureTitle": {
    "message": "Page load is not fast enough on mobile networks",
    "description": "Imperative title of a Lighthouse audit that tells the user that their page has loaded fast enough to be considered a Progressive Web App. This imperative title is shown to users when the web page has loaded too slowly to be considered a Progressive Web App."
  },
  "lighthouse-core/audits/load-fast-enough-for-pwa.js | title": {
    "message": "Page load is fast enough on mobile networks",
    "description": "Imperative title of a Lighthouse audit that tells the user that their page has loaded fast enough to be considered a Progressive Web App. This is displayed in a list of audit titles that Lighthouse generates."
  },
  "lighthouse-core/audits/mainthread-work-breakdown.js | columnCategory": {
    "message": "Category",
    "description": "Label for the Main Thread Category column in data tables, rows will have a main thread Category and main thread Task Name."
  },
  "lighthouse-core/audits/mainthread-work-breakdown.js | description": {
    "message": "Consider reducing the time spent parsing, compiling and executing JS. You may find delivering smaller JS payloads helps with this. $LINK_START_0$Learn more$LINK_END_0$",
    "description": "Description of a Lighthouse audit that tells the user *why* they should reduce JS execution times. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/mainthread-work-breakdown)"
      }
    }
  },
  "lighthouse-core/audits/mainthread-work-breakdown.js | failureTitle": {
    "message": "Minimize main-thread work",
    "description": "Title of a diagnostic audit that provides detail on the main thread work the browser did to load the page. This imperative title is shown to users when there is a significant amount of execution time that could be reduced."
  },
  "lighthouse-core/audits/mainthread-work-breakdown.js | title": {
    "message": "Minimizes main-thread work",
    "description": "Title of a diagnostic audit that provides detail on the main thread work the browser did to load the page. This descriptive title is shown to users when the amount is acceptable and no user action is required."
  },
  "lighthouse-core/audits/manual/pwa-cross-browser.js | description": {
    "message": "To reach the most number of users, sites should work across every major browser. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user why they should make sites work across different browsers. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/pwa-cross-browser)"
      }
    }
  },
  "lighthouse-core/audits/manual/pwa-cross-browser.js | title": {
    "message": "Site works cross-browser",
    "description": "Title of a Lighthouse audit that prompts the user to manually check that their site works across different web browsers."
  },
  "lighthouse-core/audits/manual/pwa-each-page-has-url.js | description": {
    "message": "Ensure individual pages are deep linkable via URL and that URLs are unique for the purpose of shareability on social media. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user why they should use unique URLs for each web page. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/pwa-each-page-has-url)"
      }
    }
  },
  "lighthouse-core/audits/manual/pwa-each-page-has-url.js | title": {
    "message": "Each page has a URL",
    "description": "Title of a Lighthouse audit that prompts the user to manually check that each page on their website uses a unique URL."
  },
  "lighthouse-core/audits/manual/pwa-page-transitions.js | description": {
    "message": "Transitions should feel snappy as you tap around, even on a slow network. This experience is key to a user's perception of performance. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user why they should make transitions in their web app feel fast. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/pwa-page-transitions)"
      }
    }
  },
  "lighthouse-core/audits/manual/pwa-page-transitions.js | title": {
    "message": "Page transitions don't feel like they block on the network",
    "description": "Title of a Lighthouse audit that prompts the user to manually check that page transitions (navigating to other pages on a website) shouldn't feel like they are waiting for the network to load."
  },
  "lighthouse-core/audits/metrics/estimated-input-latency.js | description": {
    "message": "Estimated Input Latency is an estimate of how long your app takes to respond to user input, in milliseconds, during the busiest 5s window of page load. If your latency is higher than 50 ms, users may perceive your app as laggy. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of the Estimated Input Latency metric that estimates the amount of time, in milliseconds, that the app takes to respond to user input. This description is displayed within a tooltip when the user hovers on the metric name to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/estimated-input-latency)"
      }
    }
  },
  "lighthouse-core/audits/metrics/estimated-input-latency.js | title": {
    "message": "Estimated Input Latency",
    "description": "The name of the metric that marks the estimated time between the page receiving input (a user clicking, tapping, or typing) and the page responding. Shown to users as the label for the numeric metric value. Ideally fits within a ~40 character limit."
  },
  "lighthouse-core/audits/metrics/first-contentful-paint.js | description": {
    "message": "First Contentful Paint marks the time at which the first text or image is painted. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of the First Contentful Paint (FCP) metric, which marks the time at which the first text or image is painted by the browser. This is displayed within a tooltip when the user hovers on the metric name to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/first-contentful-paint)"
      }
    }
  },
  "lighthouse-core/audits/metrics/first-contentful-paint.js | title": {
    "message": "First Contentful Paint",
    "description": "The name of the metric that marks the time at which the first text or image is painted by the browser. Shown to users as the label for the numeric metric value. Ideally fits within a ~40 character limit."
  },
  "lighthouse-core/audits/metrics/first-cpu-idle.js | description": {
    "message": "First CPU Idle marks the first time at which the page's main thread is quiet enough to handle input.  $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of the First CPU Idle metric, which marks the time at which the page has displayed content and the CPU is not busy executing the page's scripts. This is displayed within a tooltip when the user hovers on the metric name to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/first-cpu-idle)"
      }
    }
  },
  "lighthouse-core/audits/metrics/first-cpu-idle.js | title": {
    "message": "First CPU Idle",
    "description": "The name of the metric that marks when the page has displayed content and the CPU is not busy executing the page's scripts. Shown to users as the label for the numeric metric value. Ideally fits within a ~40 character limit."
  },
  "lighthouse-core/audits/metrics/first-meaningful-paint.js | description": {
    "message": "First Meaningful Paint measures when the primary content of a page is visible. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of the First Meaningful Paint (FMP) metric, which marks the time at which a majority of the content has been painted by the browser. This is displayed within a tooltip when the user hovers on the metric name to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/first-meaningful-paint)"
      }
    }
  },
  "lighthouse-core/audits/metrics/first-meaningful-paint.js | title": {
    "message": "First Meaningful Paint",
    "description": "The name of the metric that marks the time at which a majority of the content has been painted by the browser. Shown to users as the label for the numeric metric value. Ideally fits within a ~40 character limit."
  },
  "lighthouse-core/audits/metrics/interactive.js | description": {
    "message": "Time to interactive is the amount of time it takes for the page to become fully interactive. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of the Time to Interactive (TTI) metric, which evaluates when a page has completed its primary network activity and main thread work. This is displayed within a tooltip when the user hovers on the metric name to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/interactive)"
      }
    }
  },
  "lighthouse-core/audits/metrics/interactive.js | title": {
    "message": "Time to Interactive",
    "description": "The name of the metric that marks the time at which the page is fully loaded and is able to quickly respond to user input (clicks, taps, and keypresses feel responsive). Shown to users as the label for the numeric metric value. Ideally fits within a ~40 character limit."
  },
  "lighthouse-core/audits/metrics/max-potential-fid.js | description": {
    "message": "The maximum potential First Input Delay that your users could experience is the duration, in milliseconds, of the longest task. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of the Maximum Potential First Input Delay metric that marks the maximum estimated time between the page receiving input (a user clicking, tapping, or typing) and the page responding. This description is displayed within a tooltip when the user hovers on the metric name to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://developers.google.com/web/updates/2018/05/first-input-delay)"
      }
    }
  },
  "lighthouse-core/audits/metrics/max-potential-fid.js | title": {
    "message": "Max Potential First Input Delay",
    "description": "The name of the metric \"Maximum Potential First Input Delay\" that marks the maximum estimated time between the page receiving input (a user clicking, tapping, or typing) and the page responding. Shown to users as the label for the numeric metric value. Ideally fits within a ~40 character limit."
  },
  "lighthouse-core/audits/metrics/speed-index.js | description": {
    "message": "Speed Index shows how quickly the contents of a page are visibly populated. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of the Speed Index metric, which summarizes how quickly the page looked visually complete. This is displayed within a tooltip when the user hovers on the metric name to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/speed-index)"
      }
    }
  },
  "lighthouse-core/audits/metrics/speed-index.js | title": {
    "message": "Speed Index",
    "description": "The name of the metric that summarizes how quickly the page looked visually complete. The name of this metric is largely abstract and can be loosely translated. Shown to users as the label for the numeric metric value. Ideally fits within a ~40 character limit."
  },
  "lighthouse-core/audits/metrics/total-blocking-time.js | description": {
    "message": "Sum of all time periods between FCP and Time to Interactive, when task length exceeded 50ms, expressed in milliseconds.",
    "description": "Description of the Total Blocking Time (TBT) metric, which calculates the total duration of blocking time for a web page. Blocking times are time periods when the page would be blocked (prevented) from responding to user input (clicks, taps, and keypresses will feel slow to respond). This is displayed within a tooltip when the user hovers on the metric name to see more. No character length limits."
  },
  "lighthouse-core/audits/metrics/total-blocking-time.js | title": {
    "message": "Total Blocking Time",
    "description": "The name of a metric that calculates the total duration of blocking time for a web page. Blocking times are time periods when the page would be blocked (prevented) from responding to user input (clicks, taps, and keypresses will feel slow to respond). Shown to users as the label for the numeric metric value. Ideally fits within a ~40 character limit."
  },
  "lighthouse-core/audits/network-rtt.js | description": {
    "message": "Network round trip times (RTT) have a large impact on performance. If the RTT to an origin is high, it's an indication that servers closer to the user could improve performance. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user that a high network round trip time (RTT) can effect their website's performance because the server is physically far away from them thus making the RTT high. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://hpbn.co/primer-on-latency-and-bandwidth/)"
      }
    }
  },
  "lighthouse-core/audits/network-rtt.js | title": {
    "message": "Network Round Trip Times",
    "description": "Descriptive title of a Lighthouse audit that tells the user the round trip times to each origin the page connected to. This is displayed in a list of audit titles that Lighthouse generates."
  },
  "lighthouse-core/audits/network-server-latency.js | description": {
    "message": "Server latencies can impact web performance. If the server latency of an origin is high, it's an indication the server is overloaded or has poor backend performance. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user that server latency can effect their website's performance negatively. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://hpbn.co/primer-on-web-performance/#analyzing-the-resource-waterfall)"
      }
    }
  },
  "lighthouse-core/audits/network-server-latency.js | title": {
    "message": "Server Backend Latencies",
    "description": "Descriptive title of a Lighthouse audit that tells the user the server latencies observed from each origin the page connected to. This is displayed in a list of audit titles that Lighthouse generates."
  },
  "lighthouse-core/audits/offline-start-url.js | description": {
    "message": "A service worker enables your web app to be reliable in unpredictable network conditions. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user why a website should respond to requests when offline. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/offline-start-url)"
      }
    }
  },
  "lighthouse-core/audits/offline-start-url.js | failureTitle": {
    "message": "$MARKDOWN_SNIPPET_0$ does not respond with a 200 when offline",
    "description": "Title of a Lighthouse audit that provides detail on the a website's offline capabilities. \"200\" refers to the HTTP status code when a site responds successfully. This descriptive title is shown to users when the test page does not respond successfully while offline.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`start_url`",
        "example": "start_url"
      }
    }
  },
  "lighthouse-core/audits/offline-start-url.js | title": {
    "message": "$MARKDOWN_SNIPPET_0$ responds with a 200 when offline",
    "description": "Title of a Lighthouse audit that provides detail on the a website's offline capabilities. \"200\" refers to the HTTP status code when a site responds successfully. This descriptive title is shown to users when the test page responds successfully while offline.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`start_url`",
        "example": "start_url"
      }
    }
  },
  "lighthouse-core/audits/offline-start-url.js | warningCantStart": {
    "message": "Lighthouse couldn't read the $MARKDOWN_SNIPPET_0$ from the manifest. As a result, the $MARKDOWN_SNIPPET_1$ was assumed to be the document's URL. Error message: '$ICU_0$'.",
    "description": "Warning that the audit couldn't find the start_url and used the page's URL instead.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`start_url`",
        "example": "start_url"
      },
      "MARKDOWN_SNIPPET_1": {
        "content": "`start_url`",
        "example": "start_url"
      },
      "ICU_0": {
        "content": "{manifestWarning}",
        "example": "No Manifest Fetched."
      }
    }
  },
  "lighthouse-core/audits/performance-budget.js | columnOverBudget": {
    "message": "Over Budget",
    "description": "Label for a column in a data table; entries will be how much the quantity or size of network requests exceeded a predetermined budget."
  },
  "lighthouse-core/audits/performance-budget.js | description": {
    "message": "Keep the quantity and size of network requests under the targets set by the provided performance budget. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit where a user sets budgets for the quantity and size of page resources. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://developers.google.com/web/tools/lighthouse/audits/budgets)"
      }
    }
  },
  "lighthouse-core/audits/performance-budget.js | requestCountOverBudget": {
    "message": "{count, plural,\n    =1 {1 request}\n    other {# requests}\n   }",
    "description": "[ICU Syntax] Entry in a data table identifying the number of network requests of a particular type. Count will be a whole number. String should be as short as possible to be able to fit well into the table."
  },
  "lighthouse-core/audits/performance-budget.js | title": {
    "message": "Performance budget",
    "description": "Title of a Lighthouse audit that compares the size and quantity of page resources against targets set by the user. These targets are thought of as \"performance budgets\" because these metrics impact page performance (i.e. how quickly a page loads)."
  },
  "lighthouse-core/audits/redirects-http.js | description": {
    "message": "If you've already set up HTTPS, make sure that you redirect all HTTP traffic to HTTPS in order to enable secure web features for all your users. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user why they should direct HTTP traffic to HTTPS. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/redirects-http)"
      }
    }
  },
  "lighthouse-core/audits/redirects-http.js | failureTitle": {
    "message": "Does not redirect HTTP traffic to HTTPS",
    "description": "Title of a Lighthouse audit that provides detail on HTTP to HTTPS redirects. This descriptive title is shown to users when HTTP traffic is not redirected to HTTPS."
  },
  "lighthouse-core/audits/redirects-http.js | title": {
    "message": "Redirects HTTP traffic to HTTPS",
    "description": "Title of a Lighthouse audit that provides detail on HTTP to HTTPS redirects. This descriptive title is shown to users when HTTP traffic is redirected to HTTPS."
  },
  "lighthouse-core/audits/redirects.js | description": {
    "message": "Redirects introduce additional delays before the page can be loaded. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells users why they should reduce the number of server-side redirects on their page. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/redirects)"
      }
    }
  },
  "lighthouse-core/audits/redirects.js | title": {
    "message": "Avoid multiple page redirects",
    "description": "Imperative title of a Lighthouse audit that tells the user to eliminate the redirects taken through multiple URLs to load the page. This is shown in a list of audits that Lighthouse generates."
  },
  "lighthouse-core/audits/resource-summary.js | description": {
    "message": "To set budgets for the quantity and size of page resources, add a budget.json file. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user that they can setup a budgets for the quantity and size of page resources. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://developers.google.com/web/tools/lighthouse/audits/budgets)"
      }
    }
  },
  "lighthouse-core/audits/resource-summary.js | displayValue": {
    "message": "{requestCount, plural, =1 {1 request • $CUSTOM_ICU_0$ KB} other {# requests • $CUSTOM_ICU_1$ KB}}",
    "description": "[ICU Syntax] Label for an audit identifying the number of requests and kilobytes used to load the page.",
    "placeholders": {
      "CUSTOM_ICU_0": {
        "content": "{byteCount, number, bytes}",
        "example": "499"
      },
      "CUSTOM_ICU_1": {
        "content": "{byteCount, number, bytes}",
        "example": "499"
      }
    }
  },
  "lighthouse-core/audits/resource-summary.js | title": {
    "message": "Keep request counts low and transfer sizes small",
    "description": "Imperative title of a Lighthouse audit that tells the user to minimize the size and quantity of resources used to load the page."
  },
  "lighthouse-core/audits/seo/canonical.js | description": {
    "message": "Canonical links suggest which URL to show in search results. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user *why* they need to have a valid rel=canonical link. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/canonical)"
      }
    }
  },
  "lighthouse-core/audits/seo/canonical.js | explanationConflict": {
    "message": "Multiple conflicting URLs ($ICU_0$)",
    "description": "Explanatory message stating that there was a failure in an audit caused by multiple URLs conflicting with each other.",
    "placeholders": {
      "ICU_0": {
        "content": "{urlList}",
        "example": "https://example.com, https://example2.com"
      }
    }
  },
  "lighthouse-core/audits/seo/canonical.js | explanationDifferentDomain": {
    "message": "Points to a different domain ($ICU_0$)",
    "description": "Explanatory message stating that there was a failure in an audit caused by a URL pointing to a different domain.",
    "placeholders": {
      "ICU_0": {
        "content": "{url}",
        "example": "https://example.com/"
      }
    }
  },
  "lighthouse-core/audits/seo/canonical.js | explanationInvalid": {
    "message": "Invalid URL ($ICU_0$)",
    "description": "Explanatory message stating that there was a failure in an audit caused by a URL being invalid.",
    "placeholders": {
      "ICU_0": {
        "content": "{url}",
        "example": "https://example.com/"
      }
    }
  },
  "lighthouse-core/audits/seo/canonical.js | explanationPointsElsewhere": {
    "message": "Points to another $MARKDOWN_SNIPPET_0$ location ($ICU_0$)",
    "description": "Explanatory message stating that there was a failure in an audit caused by a URL pointing to a different hreflang than the current context.'hreflang' is an HTML attribute and should not be translated.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`hreflang`",
        "example": "hreflang"
      },
      "ICU_0": {
        "content": "{url}",
        "example": "https://example.com/"
      }
    }
  },
  "lighthouse-core/audits/seo/canonical.js | explanationRelative": {
    "message": "Relative URL ($ICU_0$)",
    "description": "Explanatory message stating that there was a failure in an audit caused by a URL being relative instead of absolute.",
    "placeholders": {
      "ICU_0": {
        "content": "{url}",
        "example": "https://example.com/"
      }
    }
  },
  "lighthouse-core/audits/seo/canonical.js | explanationRoot": {
    "message": "Points to the domain's root URL (the homepage), instead of an equivalent page of content",
    "description": "Explanatory message stating that the page's canonical URL was pointing to the domain's root URL, which is a common mistake. \"points\" refers to the action of the 'rel=canonical' referencing another link. \"root\" refers to the starting/home page of the website. \"domain\" refers to the registered domain name of the website."
  },
  "lighthouse-core/audits/seo/canonical.js | failureTitle": {
    "message": "Document does not have a valid $MARKDOWN_SNIPPET_0$",
    "description": "Title of a Lighthouse audit that provides detail on a page's rel=canonical link. This descriptive title is shown to users when the rel=canonical link is invalid and should be fixed. \"rel=canonical\" is an HTML attribute and value and so should not be translated.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`rel=canonical`",
        "example": "rel=canonical"
      }
    }
  },
  "lighthouse-core/audits/seo/canonical.js | title": {
    "message": "Document has a valid $MARKDOWN_SNIPPET_0$",
    "description": "Title of a Lighthouse audit that provides detail on a page's rel=canonical link. This descriptive title is shown to users when the rel=canonical link is valid. \"rel=canonical\" is an HTML attribute and value and so should not be translated.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`rel=canonical`",
        "example": "rel=canonical"
      }
    },
    "meaning": "Title of a Lighthouse audit that provides detail on a page's rel=canonical link. This descriptive title is shown to users when the rel=canonical link is valid. \"rel=canonical\" is an HTML attribute and value and so should not be translated."
  },
  "lighthouse-core/audits/seo/font-size.js | description": {
    "message": "Font sizes less than 12px are too small to be legible and require mobile visitors to “pinch to zoom” in order to read. Strive to have >60% of page text ≥12px. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user *why* they need to use a larger font size. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/font-size)"
      }
    }
  },
  "lighthouse-core/audits/seo/font-size.js | displayValue": {
    "message": "$CUSTOM_ICU_0$ legible text",
    "description": "Label for the audit identifying font sizes that are too small.",
    "placeholders": {
      "CUSTOM_ICU_0": {
        "content": "{decimalProportion, number, extendedPercent}",
        "example": "37.92%"
      }
    }
  },
  "lighthouse-core/audits/seo/font-size.js | explanationViewport": {
    "message": "Text is illegible because there's no viewport meta tag optimized for mobile screens.",
    "description": "Explanatory message stating that there was a failure in an audit caused by a missing page viewport meta tag configuration. \"viewport\" and \"meta\" are HTML terms and should not be translated."
  },
  "lighthouse-core/audits/seo/font-size.js | explanationWithDisclaimer": {
    "message": "$CUSTOM_ICU_0$ of text is too small (based on $CUSTOM_ICU_1$ sample).",
    "description": "Explanatory message stating that there was a failure in an audit caused by a certain percentage of the text on the page being too small, based on a sample size of text that was less than 100% of the text on the page. \"decimalProportion\" will be replaced by a percentage between 0 and 100%.",
    "placeholders": {
      "CUSTOM_ICU_0": {
        "content": "{decimalProportion, number, extendedPercent}",
        "example": "37.92%"
      },
      "CUSTOM_ICU_1": {
        "content": "{decimalProportionVisited, number, extendedPercent}",
        "example": "37.92%"
      }
    }
  },
  "lighthouse-core/audits/seo/font-size.js | failureTitle": {
    "message": "Document doesn't use legible font sizes",
    "description": "Title of a Lighthouse audit that provides detail on the font sizes used on the page. This descriptive title is shown to users when there is a font that may be too small to be read by users."
  },
  "lighthouse-core/audits/seo/font-size.js | title": {
    "message": "Document uses legible font sizes",
    "description": "Title of a Lighthouse audit that provides detail on the font sizes used on the page. This descriptive title is shown to users when the fonts used on the page are large enough to be considered legible."
  },
  "lighthouse-core/audits/seo/hreflang.js | description": {
    "message": "hreflang links tell search engines what version of a page they should list in search results for a given language or region. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user *why* they need to have an hreflang link on their page. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation. \"hreflang\" is an HTML attribute and should not be translated.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/hreflang)"
      }
    }
  },
  "lighthouse-core/audits/seo/hreflang.js | failureTitle": {
    "message": "Document doesn't have a valid $MARKDOWN_SNIPPET_0$",
    "description": "Title of a Lighthouse audit that provides detail on the `hreflang` attribute on a page. This descriptive title is shown when the page's `hreflang` attribute is not valid and needs to be fixed. \"hreflang\" is an HTML attribute and should not be translated.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`hreflang`",
        "example": "hreflang"
      }
    }
  },
  "lighthouse-core/audits/seo/hreflang.js | title": {
    "message": "Document has a valid $MARKDOWN_SNIPPET_0$",
    "description": "Title of a Lighthouse audit that provides detail on the `hreflang` attribute on a page. This descriptive title is shown when the page's `hreflang` attribute is configured correctly. \"hreflang\" is an HTML attribute and should not be translated.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`hreflang`",
        "example": "hreflang"
      }
    },
    "meaning": "Title of a Lighthouse audit that provides detail on the `hreflang` attribute on a page. This descriptive title is shown when the page's `hreflang` attribute is configured correctly. \"hreflang\" is an HTML attribute and should not be translated."
  },
  "lighthouse-core/audits/seo/http-status-code.js | description": {
    "message": "Pages with unsuccessful HTTP status codes may not be indexed properly. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user *why* they need to serve pages with a valid HTTP status code. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/http-status-code)"
      }
    }
  },
  "lighthouse-core/audits/seo/http-status-code.js | failureTitle": {
    "message": "Page has unsuccessful HTTP status code",
    "description": "Descriptive title of a Lighthouse audit that provides detail on the HTTP status code a page responds with. This descriptive title is shown when the page responds to requests with an HTTP status code that indicates the request was unsuccessful."
  },
  "lighthouse-core/audits/seo/http-status-code.js | title": {
    "message": "Page has successful HTTP status code",
    "description": "Title of a Lighthouse audit that provides detail on the HTTP status code a page responds with. This descriptive title is shown when the page has responded with a valid HTTP status code."
  },
  "lighthouse-core/audits/seo/is-crawlable.js | description": {
    "message": "Search engines are unable to include your pages in search results if they don't have permission to crawl them. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user *why* allowing search-engine crawling of their page is beneficial. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/is-crawable)"
      }
    }
  },
  "lighthouse-core/audits/seo/is-crawlable.js | failureTitle": {
    "message": "Page is blocked from indexing",
    "description": "Title of a Lighthouse audit that provides detail on if search-engine crawlers are blocked from indexing the page. This title is shown when the page has been configured to block indexing and therefore cannot be indexed by search engines."
  },
  "lighthouse-core/audits/seo/is-crawlable.js | title": {
    "message": "Page isn’t blocked from indexing",
    "description": "Title of a Lighthouse audit that provides detail on if search-engine crawlers are blocked from indexing the page. This title is shown when the page is not blocked from indexing and can be crawled."
  },
  "lighthouse-core/audits/seo/link-text.js | description": {
    "message": "Descriptive link text helps search engines understand your content. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user *why* they need to have descriptive text on the links in their page. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/link-text)"
      }
    }
  },
  "lighthouse-core/audits/seo/link-text.js | displayValue": {
    "message": "{itemCount, plural,\n    =1 {1 link found}\n    other {# links found}\n    }",
    "description": "[ICU Syntax] Label for the audit identifying the number of links found. \"link\" here refers to the links in a web page to other web pages."
  },
  "lighthouse-core/audits/seo/link-text.js | failureTitle": {
    "message": "Links do not have descriptive text",
    "description": "Title of a Lighthouse audit that tests if each link on a page contains a sufficient description of what a user will find when they click it. Generic, non-descriptive text like \"click here\" doesn't give an indication of what the link leads to. This descriptive title is shown when one or more links on the page contain generic, non-descriptive text."
  },
  "lighthouse-core/audits/seo/link-text.js | title": {
    "message": "Links have descriptive text",
    "description": "Title of a Lighthouse audit that tests if each link on a page contains a sufficient description of what a user will find when they click it. Generic, non-descriptive text like \"click here\" doesn't give an indication of what the link leads to. This descriptive title is shown when all links on the page have sufficient textual descriptions."
  },
  "lighthouse-core/audits/seo/manual/structured-data.js | description": {
    "message": "Run the $LINK_START_0$Structured Data Testing Tool$LINK_END_0$ and the $LINK_START_1$Structured Data Linter$LINK_END_1$ to validate structured data. $LINK_START_2$Learn more$LINK_END_2$.",
    "description": "Description of a Lighthouse audit that provides detail on the structured data in a page. \"Structured data\" is a standardized data format on a page that helps a search engine categorize and understand its contents. This description is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://search.google.com/structured-data/testing-tool/)"
      },
      "LINK_START_1": {
        "content": "["
      },
      "LINK_END_1": {
        "content": "](http://linter.structured-data.org/)"
      },
      "LINK_START_2": {
        "content": "["
      },
      "LINK_END_2": {
        "content": "](https://web.dev/structured-data)"
      }
    }
  },
  "lighthouse-core/audits/seo/manual/structured-data.js | title": {
    "message": "Structured data is valid",
    "description": "Title of a Lighthouse audit that prompts users to manually check their page for valid structured data. \"Structured data\" is a standardized data format on a page that helps a search engine categorize and understand its contents."
  },
  "lighthouse-core/audits/seo/meta-description.js | description": {
    "message": "Meta descriptions may be included in search results to concisely summarize page content. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user *why* they need to have meta descriptions on their page. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/meta-description)"
      }
    }
  },
  "lighthouse-core/audits/seo/meta-description.js | explanation": {
    "message": "Description text is empty.",
    "description": "Explanatory message stating that there was a failure in an audit caused by the page's meta description text being empty."
  },
  "lighthouse-core/audits/seo/meta-description.js | failureTitle": {
    "message": "Document does not have a meta description",
    "description": "Title of a Lighthouse audit that provides detail on the web page's document meta description. This descriptive title is shown when the document does not have a meta description. \"meta\" should be left untranslated because it refers to an HTML element."
  },
  "lighthouse-core/audits/seo/meta-description.js | title": {
    "message": "Document has a meta description",
    "description": "Title of a Lighthouse audit that provides detail on the web page's document meta description. This descriptive title is shown when the document has a meta description. \"meta\" should be left untranslated because it refers to an HTML element."
  },
  "lighthouse-core/audits/seo/plugins.js | description": {
    "message": "Search engines can't index plugin content, and many devices restrict plugins or don't support them. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user *why* they need to avoid using browser plugins in their content. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/plugins)"
      }
    }
  },
  "lighthouse-core/audits/seo/plugins.js | failureTitle": {
    "message": "Document uses plugins",
    "description": "Descriptive title of a Lighthouse audit that provides detail on the browser plugins used by the page. This title is shown when there is plugin content on the page."
  },
  "lighthouse-core/audits/seo/plugins.js | title": {
    "message": "Document avoids plugins",
    "description": "Title of a Lighthouse audit that provides detail on the browser plugins used by the page. This descriptive title is shown when there is no plugin content on the page that would restrict search indexing."
  },
  "lighthouse-core/audits/seo/robots-txt.js | description": {
    "message": "If your robots.txt file is malformed, crawlers may not be able to understand how you want your website to be crawled or indexed. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user *why* they need to have a valid robots.txt file. Note: \"robots.txt\" is a canonical filename and should not be translated. This is displayed after a user expands the section to see more. No character length limits.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/robots-txt)"
      }
    }
  },
  "lighthouse-core/audits/seo/robots-txt.js | displayValueHttpBadCode": {
    "message": "Request for robots.txt returned HTTP status: $ICU_0$",
    "description": "Label for the audit identifying that the robots.txt request has returned a specific HTTP status code. Note: \"robots.txt\" is a canonical filename and should not be translated.",
    "placeholders": {
      "ICU_0": {
        "content": "{statusCode}",
        "example": "500"
      }
    }
  },
  "lighthouse-core/audits/seo/robots-txt.js | displayValueValidationError": {
    "message": "{itemCount, plural,\n    =1 {1 error found}\n    other {# errors found}\n    }",
    "description": "[ICU Syntax] Label for the audit identifying the number of errors that occured while validating the robots.txt file. \"itemCount\" will be replaced by the integer count of errors encountered."
  },
  "lighthouse-core/audits/seo/robots-txt.js | explanation": {
    "message": "Lighthouse was unable to download a robots.txt file",
    "description": "Explanatory message stating that there was a failure in an audit caused by Lighthouse not being able to download the robots.txt file for the site.  Note: \"robots.txt\" is a canonical filename and should not be translated."
  },
  "lighthouse-core/audits/seo/robots-txt.js | failureTitle": {
    "message": "robots.txt is not valid",
    "description": "Title of a Lighthouse audit that provides detail on the site's robots.txt file. Note: \"robots.txt\" is a canonical filename and should not be translated. This descriptive title is shown when the robots.txt file is misconfigured, which makes the page hard or impossible to scan via web crawler."
  },
  "lighthouse-core/audits/seo/robots-txt.js | title": {
    "message": "robots.txt is valid",
    "description": "Title of a Lighthouse audit that provides detail on the site's robots.txt file. Note: \"robots.txt\" is a canonical filename and should not be translated. This descriptive title is shown when the robots.txt file is present and configured correctly."
  },
  "lighthouse-core/audits/seo/tap-targets.js | description": {
    "message": "Interactive elements like buttons and links should be large enough (48x48px), and have enough space around them, to be easy enough to tap without overlapping onto other elements. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user why buttons and links need to be big enough and what 'big enough' means. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/tap-targets)"
      }
    }
  },
  "lighthouse-core/audits/seo/tap-targets.js | displayValue": {
    "message": "$CUSTOM_ICU_0$ appropriately sized tap targets",
    "description": "Explanatory message stating that a certain percentage of the tap targets (like buttons and links) on the page are of an appropriately large size.",
    "placeholders": {
      "CUSTOM_ICU_0": {
        "content": "{decimalProportion, number, percent}",
        "example": "54.6%"
      }
    }
  },
  "lighthouse-core/audits/seo/tap-targets.js | explanationViewportMetaNotOptimized": {
    "message": "Tap targets are too small because there's no viewport meta tag optimized for mobile screens",
    "description": "Explanatory message stating that there was a failure in an audit caused by the viewport meta tag not being optimized for mobile screens, which caused tap targets like buttons and links to be too small to tap on."
  },
  "lighthouse-core/audits/seo/tap-targets.js | failureTitle": {
    "message": "Tap targets are not sized appropriately",
    "description": "Descriptive title of a Lighthouse audit that provides detail on whether tap targets (like buttons and links) on a page are big enough so they can easily be tapped on a mobile device. This descriptive title is shown when tap targets are not easy to tap on."
  },
  "lighthouse-core/audits/seo/tap-targets.js | overlappingTargetHeader": {
    "message": "Overlapping Target",
    "description": "Label of a table column that identifies a tap target (like a link or button) that overlaps with another tap target."
  },
  "lighthouse-core/audits/seo/tap-targets.js | tapTargetHeader": {
    "message": "Tap Target",
    "description": "Label of a table column that identifies tap targets (like buttons and links) that have failed the audit and aren't easy to tap on."
  },
  "lighthouse-core/audits/seo/tap-targets.js | title": {
    "message": "Tap targets are sized appropriately",
    "description": "Title of a Lighthouse audit that provides detail on whether tap targets (like buttons and links) on a page are big enough so they can easily be tapped on a mobile device. This descriptive title is shown when tap targets are easy to tap on."
  },
  "lighthouse-core/audits/service-worker.js | description": {
    "message": "The service worker is the technology that enables your app to use many Progressive Web App features, such as offline, add to homescreen, and push notifications. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user why they should use a service worker. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/service-worker)"
      }
    }
  },
  "lighthouse-core/audits/service-worker.js | explanationBadManifest": {
    "message": "This page is controlled by a service worker, however no $MARKDOWN_SNIPPET_0$ was found because manifest failed to parse as valid JSON",
    "description": "Message explaining that the page had an invalid manifest file so can't specify a starting url.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`start_url`",
        "example": "start_url"
      }
    }
  },
  "lighthouse-core/audits/service-worker.js | explanationBadStartUrl": {
    "message": "This page is controlled by a service worker, however the $MARKDOWN_SNIPPET_0$ ($ICU_0$) is not in the service worker's scope ($ICU_1$)",
    "description": "Message explaining that the website has a service worker, but none are in scope to control the tested starting url.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`start_url`",
        "example": "start_url"
      },
      "ICU_0": {
        "content": "{startUrl}",
        "example": "https://example.com/"
      },
      "ICU_1": {
        "content": "{scopeUrl}",
        "example": "https://othersite.com/"
      }
    }
  },
  "lighthouse-core/audits/service-worker.js | explanationNoManifest": {
    "message": "This page is controlled by a service worker, however no $MARKDOWN_SNIPPET_0$ was found because no manifest was fetched.",
    "description": "Message explaining that the page has no manifest file so can't specify a starting url.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`start_url`",
        "example": "start_url"
      }
    }
  },
  "lighthouse-core/audits/service-worker.js | explanationOutOfScope": {
    "message": "This origin has one or more service workers, however the page ($ICU_0$) is not in scope.",
    "description": "Message explaining that the website may have service workers, but none are in scope to control the tested web page.",
    "placeholders": {
      "ICU_0": {
        "content": "{pageUrl}",
        "example": "https://example.com/"
      }
    }
  },
  "lighthouse-core/audits/service-worker.js | failureTitle": {
    "message": "Does not register a service worker that controls page and $MARKDOWN_SNIPPET_0$",
    "description": "Title of a Lighthouse audit that provides detail on a page's service worker. This descriptive title is shown to users when a service worker is not present or invalid.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`start_url`",
        "example": "start_url"
      }
    }
  },
  "lighthouse-core/audits/service-worker.js | title": {
    "message": "Registers a service worker that controls page and $MARKDOWN_SNIPPET_0$",
    "description": "Title of a Lighthouse audit that provides detail on a page's service worker. This descriptive title is shown to users when a service worker is registered and valid.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`start_url`",
        "example": "start_url"
      }
    }
  },
  "lighthouse-core/audits/splash-screen.js | description": {
    "message": "A themed splash screen ensures a high-quality experience when users launch your app from their homescreens. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user why they should configure a custom splash screen. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/splash-screen)"
      }
    }
  },
  "lighthouse-core/audits/splash-screen.js | failureTitle": {
    "message": "Is not configured for a custom splash screen",
    "description": "Title of a Lighthouse audit that provides detail on splash screens. This descriptive title is shown to users when the site does not have a custom splash screen."
  },
  "lighthouse-core/audits/splash-screen.js | title": {
    "message": "Configured for a custom splash screen",
    "description": "Title of a Lighthouse audit that provides detail on splash screens. This descriptive title is shown to users when the site has a custom splash screen."
  },
  "lighthouse-core/audits/themed-omnibox.js | description": {
    "message": "The browser address bar can be themed to match your site. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user why they should set a theme color for the browser's address bar. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/themed-omnibox)"
      }
    }
  },
  "lighthouse-core/audits/themed-omnibox.js | failureTitle": {
    "message": "Does not set a theme color for the address bar.",
    "description": "Title of a Lighthouse audit that provides detail on the theme color the web page has set for the browser's address bar. This descriptive title is shown to users when an address-bar theme color has not been set."
  },
  "lighthouse-core/audits/themed-omnibox.js | title": {
    "message": "Sets a theme color for the address bar.",
    "description": "Title of a Lighthouse audit that provides detail on the theme color the web page has set for the browser's address bar. This descriptive title is shown to users when an address-bar theme color has been set."
  },
  "lighthouse-core/audits/third-party-summary.js | columnBlockingTime": {
    "message": "Main-Thread Blocking Time",
    "description": "Label for a table column that displays how much time each row spent blocking other work on the main thread, entries will be the number of milliseconds spent."
  },
  "lighthouse-core/audits/third-party-summary.js | columnThirdParty": {
    "message": "Third-Party",
    "description": "Label for a table column that displays the name of a third-party provider that potentially links to their website."
  },
  "lighthouse-core/audits/third-party-summary.js | description": {
    "message": "Third-party code can significantly impact load performance. Limit the number of redundant third-party providers and try to load third-party code after your page has primarily finished loading. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that identifies the code on the page that the user doesn't control. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/loading-third-party-javascript/)"
      }
    }
  },
  "lighthouse-core/audits/third-party-summary.js | displayValue": {
    "message": "Third-party code blocked the main thread for $CUSTOM_ICU_0$ ms",
    "description": "Summary text for the result of a Lighthouse audit that identifies the code on a web page that the user doesn't control (referred to as \"third-party code\"). This text summarizes the number of distinct entities that were found on the page.",
    "placeholders": {
      "CUSTOM_ICU_0": {
        "content": "{timeInMs, number, milliseconds}",
        "example": "499"
      }
    }
  },
  "lighthouse-core/audits/third-party-summary.js | failureTitle": {
    "message": "Reduce the impact of third-party code",
    "description": "Title of a diagnostic audit that provides details about the code on a web page that the user doesn't control (referred to as \"third-party code\"). This imperative title is shown to users when there is a significant amount of page execution time caused by third-party code that should be reduced."
  },
  "lighthouse-core/audits/third-party-summary.js | title": {
    "message": "Third-Party usage",
    "description": "Title of a diagnostic audit that provides details about the code on a web page that the user doesn't control (referred to as \"third-party code\"). This descriptive title is shown to users when the amount is acceptable and no user action is required."
  },
  "lighthouse-core/audits/time-to-first-byte.js | description": {
    "message": "Time To First Byte identifies the time at which your server sends a response. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user *why* they should reduce the amount of time it takes their server to start responding to requests. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/time-to-first-byte)"
      }
    }
  },
  "lighthouse-core/audits/time-to-first-byte.js | displayValue": {
    "message": "Root document took $CUSTOM_ICU_0$ ms",
    "description": "Used to summarize the total Time to First Byte duration for the primary HTML response. The `{timeInMs}` placeholder will be replaced with the time duration, shown in milliseconds (e.g. 210 ms)",
    "placeholders": {
      "CUSTOM_ICU_0": {
        "content": "{timeInMs, number, milliseconds}",
        "example": "499"
      }
    }
  },
  "lighthouse-core/audits/time-to-first-byte.js | failureTitle": {
    "message": "Reduce server response times (TTFB)",
    "description": "Title of a diagnostic audit that provides detail on how long it took from starting a request to when the server started responding. This imperative title is shown to users when there is a significant amount of execution time that could be reduced."
  },
  "lighthouse-core/audits/time-to-first-byte.js | title": {
    "message": "Server response times are low (TTFB)",
    "description": "Title of a diagnostic audit that provides detail on how long it took from starting a request to when the server started responding. This descriptive title is shown to users when the amount is acceptable and no user action is required."
  },
  "lighthouse-core/audits/user-timings.js | columnDuration": {
    "message": "Duration",
    "description": "Label for the Duration column in the User Timing event data table. User Timing API entries are added by the developer of the web page. Durations are only provided for 'Measure' entries. Durations are the number of total number milliseconds from Start Time to their ending point. e.g. '2,020.64 ms'"
  },
  "lighthouse-core/audits/user-timings.js | columnStartTime": {
    "message": "Start Time",
    "description": "Label for the Start Time column in the User Timing event data table. User Timing API entries are added by the developer of the web page. Start Times are the number of milliseconds since the page started loading, e.g. '380.26 ms'"
  },
  "lighthouse-core/audits/user-timings.js | columnType": {
    "message": "Type",
    "description": "Label for the Type column in the User Timing event data table. User Timing API entries are added by the developer of the web page. The only possible types are 'Mark' and Measure'."
  },
  "lighthouse-core/audits/user-timings.js | description": {
    "message": "Consider instrumenting your app with the User Timing API to measure your app's real-world performance during key user experiences. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user they may want to use the User Timing API to help measure the performance of aspects of their page load and interaction. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/user-timings)"
      }
    }
  },
  "lighthouse-core/audits/user-timings.js | displayValue": {
    "message": "{itemCount, plural,\n    =1 {1 user timing}\n    other {# user timings}\n    }",
    "description": "[ICU Syntax] Label for an audit identifying the number of User Timing timestamps present in the page."
  },
  "lighthouse-core/audits/user-timings.js | title": {
    "message": "User Timing marks and measures",
    "description": "Descriptive title of a diagnostic audit that provides details on any timestamps generated by the page. User Timing refers to the 'User Timing API', which enables a website to record specific times as 'marks', or spans of time as 'measures'."
  },
  "lighthouse-core/audits/uses-rel-preconnect.js | crossoriginWarning": {
    "message": "A preconnect <link> was found for \"$ICU_0$\" but was not used by the browser. Check that you are using the $MARKDOWN_SNIPPET_0$ attribute properly.",
    "description": "A warning message that is shown when the user tried to follow the advice of the audit, but it's not working as expected. Forgetting to set the `crossorigin` HTML attribute, or setting it to an incorrect value, on the link is a common mistake when adding preconnect links.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`crossorigin`",
        "example": "crossorigin"
      },
      "ICU_0": {
        "content": "{securityOrigin}",
        "example": "https://example.com"
      }
    }
  },
  "lighthouse-core/audits/uses-rel-preconnect.js | description": {
    "message": "Consider adding $MARKDOWN_SNIPPET_0$ or $MARKDOWN_SNIPPET_1$ resource hints to establish early connections to important third-party origins. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user how to connect early to third-party domains that will be used to load page resources. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`preconnect`",
        "example": "preconnect"
      },
      "MARKDOWN_SNIPPET_1": {
        "content": "`dns-prefetch`",
        "example": "dns-prefetch"
      },
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/uses-rel-preconnect)"
      }
    }
  },
  "lighthouse-core/audits/uses-rel-preconnect.js | title": {
    "message": "Preconnect to required origins",
    "description": "Imperative title of a Lighthouse audit that tells the user to connect early to internet domains that will be used to load page resources. Origin is the correct term, however 'domain name' could be used if neccsesary. This is displayed in a list of audit titles that Lighthouse generates."
  },
  "lighthouse-core/audits/uses-rel-preload.js | crossoriginWarning": {
    "message": "A preload <link> was found for \"$ICU_0$\" but was not used by the browser. Check that you are using the $MARKDOWN_SNIPPET_0$ attribute properly.",
    "description": "A warning message that is shown when the user tried to follow the advice of the audit, but it's not working as expected. Forgetting to set the `crossorigin` HTML attribute, or setting it to an incorrect value, on the link is a common mistake when adding preload links.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`crossorigin`",
        "example": "crossorigin"
      },
      "ICU_0": {
        "content": "{preloadURL}",
        "example": "https://example.com"
      }
    }
  },
  "lighthouse-core/audits/uses-rel-preload.js | description": {
    "message": "Consider using $MARKDOWN_SNIPPET_0$ to prioritize fetching resources that are currently requested later in page load. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user *why* they should preload important network requests. The associated network requests are started halfway through pageload (or later) but should be started at the beginning. This is displayed after a user expands the section to see more. No character length limits. '<link rel=preload>' is the html code the user would include in their page and shouldn't be translated. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`<link rel=preload>`",
        "example": "<link rel=preload>"
      },
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/uses-rel-preload)"
      }
    }
  },
  "lighthouse-core/audits/uses-rel-preload.js | title": {
    "message": "Preload key requests",
    "description": "Imperative title of a Lighthouse audit that tells the user to use <link rel=preload> to initiate important network requests earlier during page load. This is displayed in a list of audit titles that Lighthouse generates."
  },
  "lighthouse-core/audits/viewport.js | description": {
    "message": "Add a $MARKDOWN_SNIPPET_0$ tag to optimize your app for mobile screens. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user why they should have a viewport meta tag in their html. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`<meta name=\"viewport\">`",
        "example": "<meta name=\"viewport\">"
      },
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/viewport)"
      }
    }
  },
  "lighthouse-core/audits/viewport.js | explanationNoTag": {
    "message": "No $MARKDOWN_SNIPPET_0$ tag found",
    "description": "Explanatory message stating that no viewport meta tag exists on the page.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`<meta name=\"viewport\">`",
        "example": "<meta name=\"viewport\">"
      }
    }
  },
  "lighthouse-core/audits/viewport.js | failureTitle": {
    "message": "Does not have a $MARKDOWN_SNIPPET_0$ tag with $MARKDOWN_SNIPPET_1$ or $MARKDOWN_SNIPPET_2$",
    "description": "Title of a Lighthouse audit that provides detail on the viewport meta tag in a web page's html. This descriptive title is shown to users when a viewport tag is not set or configured.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`<meta name=\"viewport\">`",
        "example": "<meta name=\"viewport\">"
      },
      "MARKDOWN_SNIPPET_1": {
        "content": "`width`",
        "example": "width"
      },
      "MARKDOWN_SNIPPET_2": {
        "content": "`initial-scale`",
        "example": "initial-scale"
      }
    }
  },
  "lighthouse-core/audits/viewport.js | title": {
    "message": "Has a $MARKDOWN_SNIPPET_0$ tag with $MARKDOWN_SNIPPET_1$ or $MARKDOWN_SNIPPET_2$",
    "description": "Title of a Lighthouse audit that provides detail on the viewport meta tag in a web page's html. This descriptive title is shown to users when a viewport tag is set and configured.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`<meta name=\"viewport\">`",
        "example": "<meta name=\"viewport\">"
      },
      "MARKDOWN_SNIPPET_1": {
        "content": "`width`",
        "example": "width"
      },
      "MARKDOWN_SNIPPET_2": {
        "content": "`initial-scale`",
        "example": "initial-scale"
      }
    }
  },
  "lighthouse-core/audits/without-javascript.js | description": {
    "message": "Your app should display some content when JavaScript is disabled, even if it's just a warning to the user that JavaScript is required to use the app. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user why they should return content even if Javascript is unavailable in a browser. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/without-javascript)"
      }
    }
  },
  "lighthouse-core/audits/without-javascript.js | explanation": {
    "message": "The page body should render some content if its scripts are not available.",
    "description": "Message explaining that a website's body should render some (any) content even if the page's JavaScript cannot be loaded."
  },
  "lighthouse-core/audits/without-javascript.js | failureTitle": {
    "message": "Does not provide fallback content when JavaScript is not available",
    "description": "Title of a Lighthouse audit that provides detail on the web page's ability to return content with Javascript disabled in the browser. This descriptive title is shown to users when no content is shown when Javascript is not available."
  },
  "lighthouse-core/audits/without-javascript.js | title": {
    "message": "Contains some content when JavaScript is not available",
    "description": "Title of a Lighthouse audit that provides detail on the web page's ability to return content with Javascript disabled in the browser. This descriptive title is shown to users when at least some content is shown when Javascript is not available."
  },
  "lighthouse-core/audits/works-offline.js | description": {
    "message": "If you're building a Progressive Web App, consider using a service worker so that your app can work offline. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of a Lighthouse audit that tells the user why a website should respond to requests when offline. This is displayed after a user expands the section to see more. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://web.dev/works-offline)"
      }
    }
  },
  "lighthouse-core/audits/works-offline.js | failureTitle": {
    "message": "Current page does not respond with a 200 when offline",
    "description": "Title of a Lighthouse audit that provides detail on the offline responsiveness of a website. \"200\" refers to the HTTP status code when a site responds successfully. This descriptive title is shown to users when the site does not respond successfully when offline."
  },
  "lighthouse-core/audits/works-offline.js | title": {
    "message": "Current page responds with a 200 when offline",
    "description": "Title of a Lighthouse audit that provides detail on the offline responsiveness of a website. \"200\" refers to the HTTP status code when a site responds successfully. This descriptive title is shown to users when the site responds successfully even when offline."
  },
  "lighthouse-core/audits/works-offline.js | warningNoLoad": {
    "message": "The page may not be loading offline because your test URL ($ICU_0$) was redirected to \"$ICU_1$\". Try testing the second URL directly.",
    "description": "Warning that the web page redirected during testing and that may have affected the offline load test.",
    "placeholders": {
      "ICU_0": {
        "content": "{requested}",
        "example": "https://example.com/requested/page"
      },
      "ICU_1": {
        "content": "{final}",
        "example": "https://example.com/final/resolved/page"
      }
    }
  },
  "lighthouse-core/config/default-config.js | a11yAriaGroupDescription": {
    "message": "These are opportunities to improve the usage of ARIA in your application which may enhance the experience for users of assistive technology, like a screen reader.",
    "description": "Description of the ARIA validity section within the Accessibility category. Within this section are audits with descriptive titles that highlight if whether all the aria-* HTML attributes have been used properly."
  },
  "lighthouse-core/config/default-config.js | a11yAriaGroupTitle": {
    "message": "ARIA",
    "description": "Title of the ARIA validity section within the Accessibility category. Within this section are audits with descriptive titles that highlight if whether all the aria-* HTML attributes have been used properly."
  },
  "lighthouse-core/config/default-config.js | a11yAudioVideoGroupDescription": {
    "message": "These are opportunities to provide alternative content for audio and video. This may improve the experience for users with hearing or vision impairments.",
    "description": "Description of the navigation section within the Accessibility category. Within this section are audits with descriptive titles that highlight opportunities to provide alternative content for audio and video."
  },
  "lighthouse-core/config/default-config.js | a11yAudioVideoGroupTitle": {
    "message": "Audio and video",
    "description": "Title of the navigation section within the Accessibility category. Within this section are audits with descriptive titles that highlight opportunities to provide alternative content for audio and video."
  },
  "lighthouse-core/config/default-config.js | a11yBestPracticesGroupDescription": {
    "message": "These items highlight common accessibility best practices.",
    "description": "Description of the best practices section within the Accessibility category. Within this section are audits with descriptive titles that highlight common accessibility best practices."
  },
  "lighthouse-core/config/default-config.js | a11yBestPracticesGroupTitle": {
    "message": "Best practices",
    "description": "Title of the best practices section of the Accessibility category. Within this section are audits with descriptive titles that highlight common accessibility best practices."
  },
  "lighthouse-core/config/default-config.js | a11yCategoryDescription": {
    "message": "These checks highlight opportunities to $LINK_START_0$improve the accessibility of your web app$LINK_END_0$. Only a subset of accessibility issues can be automatically detected so manual testing is also encouraged.",
    "description": "Description of the Accessibility category. This is displayed at the top of a list of audits focused on making web content accessible to all users. No character length limits. 'improve the accessibility of your web app' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://developers.google.com/web/fundamentals/accessibility)"
      }
    }
  },
  "lighthouse-core/config/default-config.js | a11yCategoryManualDescription": {
    "message": "These items address areas which an automated testing tool cannot cover. Learn more in our guide on $LINK_START_0$conducting an accessibility review$LINK_END_0$.",
    "description": "Description of the Accessibility manual checks category. This description is displayed above a list of accessibility audits that currently have no automated test and so must be verified manually by the user. No character length limits. 'conducting an accessibility review' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://developers.google.com/web/fundamentals/accessibility/how-to-review)"
      }
    }
  },
  "lighthouse-core/config/default-config.js | a11yCategoryTitle": {
    "message": "Accessibility",
    "description": "Title of the Accessibility category of audits. This section contains audits focused on making web content accessible to all users. Also used as a label of a score gauge; try to limit to 20 characters."
  },
  "lighthouse-core/config/default-config.js | a11yColorContrastGroupDescription": {
    "message": "These are opportunities to improve the legibility of your content.",
    "description": "Description of the color contrast section within the Accessibility category. Within this section are audits with descriptive titles that highlight the color and vision aspects of the page's accessibility that are passing or failing."
  },
  "lighthouse-core/config/default-config.js | a11yColorContrastGroupTitle": {
    "message": "Contrast",
    "description": "Title of the color contrast section within the Accessibility category. Within this section are audits with descriptive titles that highlight the color and vision aspects of the page's accessibility that are passing or failing."
  },
  "lighthouse-core/config/default-config.js | a11yLanguageGroupDescription": {
    "message": "These are opportunities to improve the interpretation of your content by users in different locales.",
    "description": "Description of the language section within the Accessibility category. Within this section are audits with descriptive titles that highlight if the language has been annotated in the correct HTML attributes on the page."
  },
  "lighthouse-core/config/default-config.js | a11yLanguageGroupTitle": {
    "message": "Internationalization and localization",
    "description": "Title of the language section within the Accessibility category. Within this section are audits with descriptive titles that highlight if the language has been annotated in the correct HTML attributes on the page."
  },
  "lighthouse-core/config/default-config.js | a11yNamesLabelsGroupDescription": {
    "message": "These are opportunities to improve the semantics of the controls in your application. This may enhance the experience for users of assistive technology, like a screen reader.",
    "description": "Description of the HTML element naming section within the Accessibility category. Within this section are audits with descriptive titles that highlight if the non-textual HTML elements on the page have names discernible by a screen reader."
  },
  "lighthouse-core/config/default-config.js | a11yNamesLabelsGroupTitle": {
    "message": "Names and labels",
    "description": "Title of the HTML element naming section within the Accessibility category. Within this section are audits with descriptive titles that highlight if the non-textual HTML elements on the page have names discernible by a screen reader."
  },
  "lighthouse-core/config/default-config.js | a11yNavigationGroupDescription": {
    "message": "These are opportunities to improve keyboard navigation in your application.",
    "description": "Description of the navigation section within the Accessibility category. Within this section are audits with descriptive titles that highlight opportunities to improve keyboard navigation."
  },
  "lighthouse-core/config/default-config.js | a11yNavigationGroupTitle": {
    "message": "Navigation",
    "description": "Title of the navigation section within the Accessibility category. Within this section are audits with descriptive titles that highlight opportunities to improve keyboard navigation."
  },
  "lighthouse-core/config/default-config.js | a11yTablesListsVideoGroupDescription": {
    "message": "These are opportunities to to improve the experience of reading tabular or list data using assistive technology, like a screen reader.",
    "description": "Description of the navigation section within the Accessibility category. Within this section are audits with descriptive titles that highlight opportunities to improve the experience of reading tabular or list data using assistive technology."
  },
  "lighthouse-core/config/default-config.js | a11yTablesListsVideoGroupTitle": {
    "message": "Tables and lists",
    "description": "Title of the navigation section within the Accessibility category. Within this section are audits with descriptive titles that highlight opportunities to improve the experience of reading tabular or list data using assistive technology."
  },
  "lighthouse-core/config/default-config.js | bestPracticesCategoryTitle": {
    "message": "Best Practices",
    "description": "Title of the Best Practices category of audits. This is displayed at the top of a list of audits focused on topics related to following web development best practices and accepted guidelines. Also used as a label of a score gauge; try to limit to 20 characters."
  },
  "lighthouse-core/config/default-config.js | budgetsGroupDescription": {
    "message": "Performance budgets set standards for the performance of your site.",
    "description": "Description of the Budgets section of the Performance category. Within this section the budget results are displayed."
  },
  "lighthouse-core/config/default-config.js | budgetsGroupTitle": {
    "message": "Budgets",
    "description": "Title of the Budgets section of the Performance Category. 'Budgets' refers to a budget (like a financial budget), but applied to the amount of resources on a page, rather than money."
  },
  "lighthouse-core/config/default-config.js | diagnosticsGroupDescription": {
    "message": "More information about the performance of your application. These numbers don't $LINK_START_0$directly affect$LINK_END_0$ the Performance score.",
    "description": "Description of the diagnostics section of the Performance category. Within this section are audits with non-imperative titles that provide more detail on a web page's load performance characteristics. Within this section, the user may read the details and deduce additional actions they could take to improve performance.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://github.com/GoogleChrome/lighthouse/blob/d2ec9ffbb21de9ad1a0f86ed24575eda32c796f0/docs/scoring.md#how-are-the-scores-weighted)"
      }
    }
  },
  "lighthouse-core/config/default-config.js | diagnosticsGroupTitle": {
    "message": "Diagnostics",
    "description": "Title of the diagnostics section of the Performance category. Within this section are audits with non-imperative titles that provide more detail on the page's page load performance characteristics. Whereas the 'Opportunities' suggest an action along with expected time savings, diagnostics do not. Within this section, the user may read the details and deduce additional actions they could take."
  },
  "lighthouse-core/config/default-config.js | firstPaintImprovementsGroupDescription": {
    "message": "The most critical aspect of performance is how quickly pixels are rendered onscreen. Key metrics: First Contentful Paint, First Meaningful Paint",
    "description": "Description of an opportunity sub-section of the Performance category. Within this section are audits with imperative titles that suggest actions the user can take to improve the time of the first initial render of the webpage."
  },
  "lighthouse-core/config/default-config.js | firstPaintImprovementsGroupTitle": {
    "message": "First Paint Improvements",
    "description": "Title of an opportunity sub-section of the Performance category. Within this section are audits with imperative titles that suggest actions the user can take to improve the time of the first initial render of the webpage."
  },
  "lighthouse-core/config/default-config.js | loadOpportunitiesGroupDescription": {
    "message": "These suggestions can help your page load faster. They don't $LINK_START_0$directly affect$LINK_END_0$ the Performance score.",
    "description": "Description of the opportunity section of the Performance category. 'Suggestions' could also be 'recommendations'. Within this section are audits with imperative titles that suggest actions the user can take to improve the loading performance of their web page.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://github.com/GoogleChrome/lighthouse/blob/d2ec9ffbb21de9ad1a0f86ed24575eda32c796f0/docs/scoring.md#how-are-the-scores-weighted)"
      }
    }
  },
  "lighthouse-core/config/default-config.js | loadOpportunitiesGroupTitle": {
    "message": "Opportunities",
    "description": "Title of the opportunity section of the Performance category. Within this section are audits with imperative titles that suggest actions the user can take to improve the loading performance of their web page. 'Suggestion'/'Optimization'/'Recommendation' are reasonable synonyms for 'opportunity' in this case."
  },
  "lighthouse-core/config/default-config.js | metricGroupTitle": {
    "message": "Metrics",
    "description": "Title of the speed metrics section of the Performance category. Within this section are various speed metrics which quantify the pageload performance into values presented in seconds and milliseconds."
  },
  "lighthouse-core/config/default-config.js | overallImprovementsGroupDescription": {
    "message": "Enhance the overall loading experience, so the page is responsive and ready to use as soon as possible. Key metrics: Time to Interactive, Speed Index",
    "description": "Description of an opportunity sub-section of the Performance category. Within this section are audits with imperative titles that suggest actions the user can take to improve the overall loading performance of their web page."
  },
  "lighthouse-core/config/default-config.js | overallImprovementsGroupTitle": {
    "message": "Overall Improvements",
    "description": "Title of an opportunity sub-section of the Performance category. Within this section are audits with imperative titles that suggest actions the user can take to improve the overall loading performance of their web page."
  },
  "lighthouse-core/config/default-config.js | performanceCategoryTitle": {
    "message": "Performance",
    "description": "Title of the Performance category of audits. Equivalent to 'Web performance', this term is inclusive of all web page speed and loading optimization topics. Also used as a label of a score gauge; try to limit to 20 characters."
  },
  "lighthouse-core/config/default-config.js | pwaCategoryDescription": {
    "message": "These checks validate the aspects of a Progressive Web App. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of the Progressive Web Application (PWA) category. This is displayed at the top of a list of audits focused on topics related to whether or not a site is a progressive web app, e.g. responds offline, uses a service worker, is on https, etc. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://developers.google.com/web/progressive-web-apps/checklist)"
      }
    }
  },
  "lighthouse-core/config/default-config.js | pwaCategoryManualDescription": {
    "message": "These checks are required by the baseline $LINK_START_0$PWA Checklist$LINK_END_0$ but are not automatically checked by Lighthouse. They do not affect your score but it's important that you verify them manually.",
    "description": "Description of the Progressive Web Application (PWA) manual checks category, containing a list of additional validators must be run by hand in order to check all PWA best practices. This is displayed at the top of a list of manually run audits focused on topics related to whether or not a site is a progressive web app, e.g. responds offline, uses a service worker, is on https, etc.. No character length limits.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://developers.google.com/web/progressive-web-apps/checklist)"
      }
    }
  },
  "lighthouse-core/config/default-config.js | pwaCategoryTitle": {
    "message": "Progressive Web App",
    "description": "Title of the Progressive Web Application (PWA) category of audits. This is displayed at the top of a list of audits focused on topics related to whether or not a site is a progressive web app, e.g. responds offline, uses a service worker, is on https, etc. Also used as a label of a score gauge."
  },
  "lighthouse-core/config/default-config.js | pwaFastReliableGroupTitle": {
    "message": "Fast and reliable",
    "description": "Title of the Fast and Reliable section of the web app category. Within this section are audits that check if the web site loaded quickly and can reliably load even if the internet connection is very slow or goes offline."
  },
  "lighthouse-core/config/default-config.js | pwaInstallableGroupTitle": {
    "message": "Installable",
    "description": "Title of the Installable section of the web app category. Within this section are audits that check if Chrome supports installing the web site as an app on their device."
  },
  "lighthouse-core/config/default-config.js | pwaOptimizedGroupTitle": {
    "message": "PWA Optimized",
    "description": "Title of the \"PWA Optimized\" section of the web app category. Within this section are audits that check if the developer has taken advantage of features to make their web page more enjoyable and engaging for the user."
  },
  "lighthouse-core/config/default-config.js | seoCategoryDescription": {
    "message": "These checks ensure that your page is optimized for search engine results ranking. There are additional factors Lighthouse does not check that may affect your search ranking. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of the Search Engine Optimization (SEO) category. This is displayed at the top of a list of audits focused on optimizing a website for indexing by search engines. No character length limits. 'Learn More' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://support.google.com/webmasters/answer/35769)"
      }
    }
  },
  "lighthouse-core/config/default-config.js | seoCategoryManualDescription": {
    "message": "Run these additional validators on your site to check additional SEO best practices.",
    "description": "Description of the Search Engine Optimization (SEO) manual checks category, the additional validators must be run by hand in order to check all SEO best practices. This is displayed at the top of a list of manually run audits focused on optimizing a website for indexing by search engines. No character length limits."
  },
  "lighthouse-core/config/default-config.js | seoCategoryTitle": {
    "message": "SEO",
    "description": "Title of the Search Engine Optimization (SEO) category of audits. This is displayed at the top of a list of audits focused on topics related to optimizing a website for indexing by search engines. Also used as a label of a score gauge; try to limit to 20 characters."
  },
  "lighthouse-core/config/default-config.js | seoContentGroupDescription": {
    "message": "Format your HTML in a way that enables crawlers to better understand your app’s content.",
    "description": "Description of the navigation section within the Search Engine Optimization (SEO) category. Within this section are audits with descriptive titles that highlight ways to make a website content more easily understood by search engine crawler bots."
  },
  "lighthouse-core/config/default-config.js | seoContentGroupTitle": {
    "message": "Content Best Practices",
    "description": "Title of the navigation section within the Search Engine Optimization (SEO) category. Within this section are audits with descriptive titles that highlight ways to make a website content more easily understood by search engine crawler bots."
  },
  "lighthouse-core/config/default-config.js | seoCrawlingGroupDescription": {
    "message": "To appear in search results, crawlers need access to your app.",
    "description": "Description of the navigation section within the Search Engine Optimization (SEO) category. Within this section are audits with descriptive titles that highlight ways to make a website accessible to search engine crawlers."
  },
  "lighthouse-core/config/default-config.js | seoCrawlingGroupTitle": {
    "message": "Crawling and Indexing",
    "description": "Title of the navigation section within the Search Engine Optimization (SEO) category. Within this section are audits with descriptive titles that highlight ways to make a website accessible to search engine crawlers."
  },
  "lighthouse-core/config/default-config.js | seoMobileGroupDescription": {
    "message": "Make sure your pages are mobile friendly so users don’t have to pinch or zoom in order to read the content pages. $LINK_START_0$Learn more$LINK_END_0$.",
    "description": "Description of the navigation section within the Search Engine Optimization (SEO) category. Within this section are audits with descriptive titles that highlight opportunities to make a page more usable on mobile devices.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://developers.google.com/search/mobile-sites/)"
      }
    }
  },
  "lighthouse-core/config/default-config.js | seoMobileGroupTitle": {
    "message": "Mobile Friendly",
    "description": "Title of the navigation section within the Search Engine Optimization (SEO) category. Within this section are audits with descriptive titles that highlight opportunities to make a page more usable on mobile devices."
  },
  "lighthouse-core/lib/i18n/i18n.js | columnCacheTTL": {
    "message": "Cache TTL",
    "description": "Label for a column in a data table; entries will be the time to live value of the cache header on a web resource."
  },
  "lighthouse-core/lib/i18n/i18n.js | columnLocation": {
    "message": "Location",
    "description": "Label for a column in a data table; entries will be the location of a specific line of code in a file, in the format \"line: 102\"."
  },
  "lighthouse-core/lib/i18n/i18n.js | columnName": {
    "message": "Name",
    "description": "Label for a column in a data table; entries will be the names of arbitrary objects, e.g. the name of a Javascript library, or the name of a user defined timing event."
  },
  "lighthouse-core/lib/i18n/i18n.js | columnRequests": {
    "message": "Requests",
    "description": "Label for a column in a data table; entries will be the number of network requests done by a webpage."
  },
  "lighthouse-core/lib/i18n/i18n.js | columnResourceType": {
    "message": "Resource Type",
    "description": "Label for a column in a data table; entries will be types of resources loaded over the network, e.g. \"Scripts\", \"Third-Party\", \"Stylesheet\"."
  },
  "lighthouse-core/lib/i18n/i18n.js | columnSize": {
    "message": "Size",
    "description": "Label for a column in a data table; entries will be the size of a web resource in kilobytes."
  },
  "lighthouse-core/lib/i18n/i18n.js | columnTimeSpent": {
    "message": "Time Spent",
    "description": "Label for a column in a data table; entries will be the number of milliseconds spent during a particular activity."
  },
  "lighthouse-core/lib/i18n/i18n.js | columnTransferSize": {
    "message": "Transfer Size",
    "description": "Label for a column in a data table; entries will be the number of kilobytes transferred to load a set of files."
  },
  "lighthouse-core/lib/i18n/i18n.js | columnURL": {
    "message": "URL",
    "description": "Label for a column in a data table; entries will be the URL of a web resource"
  },
  "lighthouse-core/lib/i18n/i18n.js | columnWastedBytes": {
    "message": "Potential Savings",
    "description": "Label for a column in a data table; entries will be the number of kilobytes the user could reduce their page by if they implemented the suggestions.",
    "meaning": "Label for a column in a data table; entries will be the number of kilobytes the user could reduce their page by if they implemented the suggestions."
  },
  "lighthouse-core/lib/i18n/i18n.js | columnWastedMs": {
    "message": "Potential Savings",
    "description": "Label for a column in a data table; entries will be the number of milliseconds the user could reduce page load by if they implemented the suggestions.",
    "meaning": "Label for a column in a data table; entries will be the number of milliseconds the user could reduce page load by if they implemented the suggestions."
  },
  "lighthouse-core/lib/i18n/i18n.js | displayValueByteSavings": {
    "message": "Potential savings of $CUSTOM_ICU_0$ KB",
    "description": "Label shown per-audit to show how many bytes smaller the page could be if the user implemented the suggestions. The `{wastedBytes}` placeholder will be replaced with the number of bytes, shown in kilobytes (e.g. 148 KB)",
    "placeholders": {
      "CUSTOM_ICU_0": {
        "content": "{wastedBytes, number, bytes}",
        "example": "499"
      }
    }
  },
  "lighthouse-core/lib/i18n/i18n.js | displayValueMsSavings": {
    "message": "Potential savings of $CUSTOM_ICU_0$ ms",
    "description": "Label shown per-audit to show how many milliseconds faster the page load could be if the user implemented the suggestions. The `{wastedMs}` placeholder will be replaced with the time duration, shown in milliseconds (e.g. 140 ms)",
    "placeholders": {
      "CUSTOM_ICU_0": {
        "content": "{wastedMs, number, milliseconds}",
        "example": "499"
      }
    }
  },
  "lighthouse-core/lib/i18n/i18n.js | documentResourceType": {
    "message": "Document",
    "description": "Label for a row in a data table; entries will be the total number and byte size of all 'Document' resources loaded by a web page."
  },
  "lighthouse-core/lib/i18n/i18n.js | fontResourceType": {
    "message": "Font",
    "description": "Label for a row in a data table; entries will be the total number and byte size of all 'Font' resources loaded by a web page."
  },
  "lighthouse-core/lib/i18n/i18n.js | imageResourceType": {
    "message": "Image",
    "description": "Label for a row in a data table; entries will be the total number and byte size of all 'Image' resources loaded by a web page."
  },
  "lighthouse-core/lib/i18n/i18n.js | mediaResourceType": {
    "message": "Media",
    "description": "Label for a row in a data table; entries will be the total number and byte size of all 'Media' resources loaded by a web page. 'Media' refers to audio and video files."
  },
  "lighthouse-core/lib/i18n/i18n.js | ms": {
    "message": "$CUSTOM_ICU_0$ ms",
    "description": "Used to show the duration in milliseconds that something lasted. The `{timeInMs}` placeholder will be replaced with the time duration, shown in milliseconds (e.g. 63 ms)",
    "placeholders": {
      "CUSTOM_ICU_0": {
        "content": "{timeInMs, number, milliseconds}",
        "example": "499"
      }
    }
  },
  "lighthouse-core/lib/i18n/i18n.js | otherResourceType": {
    "message": "Other",
    "description": "Label for a row in a data table; entries will be the total number and byte size of all resources loaded by a web page that don't fit into the categories of Document, Script, Stylesheet, Image, Media, & Font."
  },
  "lighthouse-core/lib/i18n/i18n.js | scriptResourceType": {
    "message": "Script",
    "description": "Label for a row in a data table; entries will be the total number and byte size of all 'Script' resources loaded by a web page. 'Script' refers to JavaScript or other files that are executable by a browser."
  },
  "lighthouse-core/lib/i18n/i18n.js | seconds": {
    "message": "$CUSTOM_ICU_0$ s",
    "description": "Used to show the duration in seconds that something lasted. The {timeInMs} placeholder will be replaced with the time duration, shown in seconds (e.g. 5.2 s)",
    "placeholders": {
      "CUSTOM_ICU_0": {
        "content": "{timeInMs, number, seconds}",
        "example": "2.4"
      }
    }
  },
  "lighthouse-core/lib/i18n/i18n.js | stylesheetResourceType": {
    "message": "Stylesheet",
    "description": "Label for a row in a data table; entries will be the total number and byte size of all 'Stylesheet' resources loaded by a web page. 'Stylesheet' refers to CSS stylesheets."
  },
  "lighthouse-core/lib/i18n/i18n.js | thirdPartyResourceType": {
    "message": "Third-party",
    "description": "Label for a row in a data table; entries will be the total number and byte size of all third-party resources loaded by a web page. 'Third-party resources are items loaded from URLs that aren't controlled by the owner of the web page."
  },
  "lighthouse-core/lib/i18n/i18n.js | totalResourceType": {
    "message": "Total",
    "description": "Label for a row in a data table; entries will be the total number and byte size of all resources loaded by a web page."
  },
  "lighthouse-core/lib/lh-error.js | badTraceRecording": {
    "message": "Something went wrong with recording the trace over your page load. Please run Lighthouse again. ($ICU_0$)",
    "description": "Error message explaining that the network trace was not able to be recorded for the Lighthouse run.",
    "placeholders": {
      "ICU_0": {
        "content": "{errorCode}",
        "example": "NO_TRACING_STARTED"
      }
    }
  },
  "lighthouse-core/lib/lh-error.js | criTimeout": {
    "message": "Timeout waiting for initial Debugger Protocol connection.",
    "description": "Error message explaining that Lighthouse timed out while waiting for the initial connection to the Chrome Devtools protocol."
  },
  "lighthouse-core/lib/lh-error.js | didntCollectScreenshots": {
    "message": "Chrome didn't collect any screenshots during the page load. Please make sure there is content visible on the page, and then try re-running Lighthouse. ($ICU_0$)",
    "description": "Error message explaining that the Lighthouse run was not able to collect screenshots through Chrome.",
    "placeholders": {
      "ICU_0": {
        "content": "{errorCode}",
        "example": "NO_SPEEDLINE_FRAMES"
      }
    }
  },
  "lighthouse-core/lib/lh-error.js | dnsFailure": {
    "message": "DNS servers could not resolve the provided domain.",
    "description": "Error message explaining that the requested page could not be resolved by the DNS server."
  },
  "lighthouse-core/lib/lh-error.js | erroredRequiredArtifact": {
    "message": "Required $ICU_0$ gatherer encountered an error: $ICU_1$",
    "description": "Error message explaning that there was an error while trying to collect a resource that was required for testing. \"artifactName\" will be replaced with the name of the resource that wasn't collected; \"errorMessage\" will be replaced with a string description of the error that occurred.",
    "placeholders": {
      "ICU_0": {
        "content": "{artifactName}",
        "example": "WebAppManifest"
      },
      "ICU_1": {
        "content": "{errorMessage}",
        "example": "Manifest invalid"
      }
    }
  },
  "lighthouse-core/lib/lh-error.js | internalChromeError": {
    "message": "An internal Chrome error occurred. Please restart Chrome and try re-running Lighthouse.",
    "description": "Error message explaining that Chrome has encountered an error during the Lighthouse run, and that Chrome should be restarted."
  },
  "lighthouse-core/lib/lh-error.js | missingRequiredArtifact": {
    "message": "Required $ICU_0$ gatherer did not run.",
    "description": "Error message explaning that a resource that was required for testing was never collected. \"artifactName\" will be replaced with the name of the resource that wasn't collected.",
    "placeholders": {
      "ICU_0": {
        "content": "{artifactName}",
        "example": "WebAppManifest"
      }
    }
  },
  "lighthouse-core/lib/lh-error.js | pageLoadFailed": {
    "message": "Lighthouse was unable to reliably load the page you requested. Make sure you are testing the correct URL and that the server is properly responding to all requests.",
    "description": "Error message explaining that Lighthouse could not load the requested URL and the steps that might be taken to fix the unreliability."
  },
  "lighthouse-core/lib/lh-error.js | pageLoadFailedHung": {
    "message": "Lighthouse was unable to reliably load the URL you requested because the page stopped responding.",
    "description": "Error message explaining that Lighthouse couldn't complete because the page has stopped responding to its instructions."
  },
  "lighthouse-core/lib/lh-error.js | pageLoadFailedInsecure": {
    "message": "The URL you have provided does not have a valid security certificate. $ICU_0$",
    "description": "Error message explaining that the security certificate of the page Lighthouse observed was invalid, so the URL cannot be accessed. securityMessages will be replaced with one or more strings from the browser explaining what was insecure about the page load.",
    "placeholders": {
      "ICU_0": {
        "content": "{securityMessages}",
        "example": "net::ERR_CERT_DATE_INVALID"
      }
    }
  },
  "lighthouse-core/lib/lh-error.js | pageLoadFailedInterstitial": {
    "message": "Chrome prevented page load with an interstitial. Make sure you are testing the correct URL and that the server is properly responding to all requests.",
    "description": "Error message explaining that Chrome prevented the page from loading and displayed an interstitial screen instead, so the URL cannot be accessed."
  },
  "lighthouse-core/lib/lh-error.js | pageLoadFailedWithDetails": {
    "message": "Lighthouse was unable to reliably load the page you requested. Make sure you are testing the correct URL and that the server is properly responding to all requests. (Details: $ICU_0$)",
    "description": "Error message explaining that Lighthouse could not load the requested URL and the steps that might be taken to fix the unreliability.",
    "placeholders": {
      "ICU_0": {
        "content": "{errorDetails}",
        "example": "FAILED_DOCUMENT_REQUEST"
      }
    }
  },
  "lighthouse-core/lib/lh-error.js | pageLoadFailedWithStatusCode": {
    "message": "Lighthouse was unable to reliably load the page you requested. Make sure you are testing the correct URL and that the server is properly responding to all requests. (Status code: $ICU_0$)",
    "description": "Error message explaining that Lighthouse could not load the requested URL and the steps that might be taken to fix the unreliability.",
    "placeholders": {
      "ICU_0": {
        "content": "{statusCode}",
        "example": "404"
      }
    }
  },
  "lighthouse-core/lib/lh-error.js | pageLoadTookTooLong": {
    "message": "Your page took too long to load. Please follow the opportunities in the report to reduce your page load time, and then try re-running Lighthouse. ($ICU_0$)",
    "description": "Error message explaining that the page loaded too slowly to perform a Lighthouse run.",
    "placeholders": {
      "ICU_0": {
        "content": "{errorCode}",
        "example": "FMP_TOO_LATE_FOR_FCPUI"
      }
    }
  },
  "lighthouse-core/lib/lh-error.js | protocolTimeout": {
    "message": "Waiting for DevTools protocol response has exceeded the allotted time. (Method: $ICU_0$)",
    "description": "Error message explaining that the Chrome Devtools protocol has exceeded the maximum timeout allowed.",
    "placeholders": {
      "ICU_0": {
        "content": "{protocolMethod}",
        "example": "Network.enable"
      }
    }
  },
  "lighthouse-core/lib/lh-error.js | requestContentTimeout": {
    "message": "Fetching resource content has exceeded the allotted time",
    "description": "Error message explaining that fetching the resources of the webpage has taken longer than the maximum time."
  },
  "lighthouse-core/lib/lh-error.js | urlInvalid": {
    "message": "The URL you have provided appears to be invalid.",
    "description": "Error message explaining that the provided URL Lighthouse points to is not valid, and cannot be loaded."
  },
  "lighthouse-core/report/html/renderer/util.js | auditGroupExpandTooltip": {
    "message": "Show audits",
    "description": "The tooltip text on an expandable chevron icon. Clicking the icon expands a section to reveal a list of audit results that was hidden by default."
  },
  "lighthouse-core/report/html/renderer/util.js | crcInitialNavigation": {
    "message": "Initial Navigation",
    "description": "String of text shown in a graphical representation of the flow of network requests for the web page. This label represents the initial network request that fetches an HTML page. This navigation may be redirected (eg. Initial navigation to http://example.com redirects to https://www.example.com)."
  },
  "lighthouse-core/report/html/renderer/util.js | crcLongestDurationLabel": {
    "message": "Maximum critical path latency:",
    "description": "Label of value shown in the summary of critical request chains. Refers to the total amount of time (milliseconds) of the longest critical path chain/sequence of network requests. Example value: 2310 ms"
  },
  "lighthouse-core/report/html/renderer/util.js | errorLabel": {
    "message": "Error!",
    "description": "A label, shown next to an audit title or metric title, indicating that there was an error computing it. The user can hover on the label to reveal a tooltip with the extended error message. Translation should be short (< 20 characters)."
  },
  "lighthouse-core/report/html/renderer/util.js | errorMissingAuditInfo": {
    "message": "Report error: no audit information",
    "description": "An error string displayed next to a particular audit when it has errored, but not provided any specific error message."
  },
  "lighthouse-core/report/html/renderer/util.js | labDataTitle": {
    "message": "Lab Data",
    "description": "Title of the lab data section of the Performance category. Within this section are various speed metrics which quantify the pageload performance into values presented in seconds and milliseconds. \"Lab\" is an abbreviated form of \"laboratory\", and refers to the fact that the data is from a controlled test of a website, not measurements from real users visiting that site."
  },
  "lighthouse-core/report/html/renderer/util.js | lsPerformanceCategoryDescription": {
    "message": "$LINK_START_0$Lighthouse$LINK_END_0$ analysis of the current page on an emulated mobile network. Values are estimated and may vary.",
    "description": "Explanation shown to users below performance results to inform them that the test was done with a 4G network connection and to warn them that the numbers they see will likely change slightly the next time they run Lighthouse. 'Lighthouse' becomes link text to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://developers.google.com/web/tools/lighthouse/)"
      }
    }
  },
  "lighthouse-core/report/html/renderer/util.js | manualAuditsGroupTitle": {
    "message": "Additional items to manually check",
    "description": "Section heading shown above a list of audits that were not computed by Lighthouse. They serve as a list of suggestions for the user to go and manually check. For example, Lighthouse can't automate testing cross-browser compatibility, so that is listed within this section, so the user is reminded to test it themselves. This section is collapsed by default, as the user should be focusing on the failed audits instead. Users can click this heading to reveal the list."
  },
  "lighthouse-core/report/html/renderer/util.js | notApplicableAuditsGroupTitle": {
    "message": "Not applicable",
    "description": "Section heading shown above a list of audits that do not apply to the page. For example, if an audit is 'Are images optimized?', but the page has no images on it, the audit will be marked as not applicable. This is neither passing or failing. This section is collapsed by default, as the user should be focusing on the failed audits instead. Users can click this heading to reveal the list."
  },
  "lighthouse-core/report/html/renderer/util.js | opportunityResourceColumnLabel": {
    "message": "Opportunity",
    "description": "Column heading label for the listing of opportunity audits. Each audit title represents an opportunity. There are only 2 columns, so no strict character limit."
  },
  "lighthouse-core/report/html/renderer/util.js | opportunitySavingsColumnLabel": {
    "message": "Estimated Savings",
    "description": "Column heading label for the estimated page load savings of opportunity audits. Estimated Savings is the total amount of time (in seconds) that Lighthouse computed could be reduced from the total page load time, if the suggested action is taken. There are only 2 columns, so no strict character limit."
  },
  "lighthouse-core/report/html/renderer/util.js | passedAuditsGroupTitle": {
    "message": "Passed audits",
    "description": "Section heading shown above a list of audits that are passing. 'Passed' here refers to a passing grade. This section is collapsed by default, as the user should be focusing on the failed audits instead. Users can click this heading to reveal the list."
  },
  "lighthouse-core/report/html/renderer/util.js | snippetCollapseButtonLabel": {
    "message": "Collapse snippet",
    "description": "Label for button that only shows a few lines of the snippet when clicked"
  },
  "lighthouse-core/report/html/renderer/util.js | snippetExpandButtonLabel": {
    "message": "Expand snippet",
    "description": "Label for button that shows all lines of the snippet when clicked"
  },
  "lighthouse-core/report/html/renderer/util.js | thirdPartyResourcesLabel": {
    "message": "Show 3rd-party resources",
    "description": "This label is for a checkbox above a table of items loaded by a web page. The checkbox is used to show or hide third-party (or \"3rd-party\") resources in the table, where \"third-party resources\" refers to items loaded by a web page from URLs that aren't controlled by the owner of the web page."
  },
  "lighthouse-core/report/html/renderer/util.js | toplevelWarningsMessage": {
    "message": "There were issues affecting this run of Lighthouse:",
    "description": "Label shown preceding any important warnings that may have invalidated the entire report. For example, if the user has Chrome extensions installed, they may add enough performance overhead that Lighthouse's performance metrics are unreliable. If shown, this will be displayed at the top of the report UI."
  },
  "lighthouse-core/report/html/renderer/util.js | varianceDisclaimer": {
    "message": "Values are estimated and may vary. The performance score is $LINK_START_0$based only on these metrics$LINK_END_0$.",
    "description": "Disclaimer shown to users below the metric values (First Contentful Paint, Time to Interactive, etc) to warn them that the numbers they see will likely change slightly the next time they run Lighthouse.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://github.com/GoogleChrome/lighthouse/blob/d2ec9ffbb21de9ad1a0f86ed24575eda32c796f0/docs/scoring.md#how-are-the-scores-weighted)"
      }
    }
  },
  "lighthouse-core/report/html/renderer/util.js | warningAuditsGroupTitle": {
    "message": "Passed audits but with warnings",
    "description": "Section heading shown above a list of passed audits that contain warnings. Audits under this section do not negatively impact the score, but Lighthouse has generated some potentially actionable suggestions that should be reviewed. This section is expanded by default and displays after the failing audits."
  },
  "lighthouse-core/report/html/renderer/util.js | warningHeader": {
    "message": "Warnings: ",
    "description": "This label is shown above a bulleted list of warnings. It is shown directly below an audit that produced warnings. Warnings describe situations the user should be aware of, as Lighthouse was unable to complete all the work required on this audit. For example, The 'Unable to decode image (biglogo.jpg)' warning may show up below an image encoding audit."
  },
  "stack-packs/packs/wordpress.js | efficient_animated_content": {
    "message": "Consider uploading your GIF to a service which will make it available to embed as an HTML5 video.",
    "description": "Additional description of a Lighthouse audit that tells the user how they can improve performance by encoding animated images as video, in the context of the Wordpress CMS platform. This is displayed after a user expands the section to see more. No character length limits. Links in (parenthesis) become link texts to additional documentation."
  },
  "stack-packs/packs/wordpress.js | offscreen_images": {
    "message": "Install a $LINK_START_0$lazy-load WordPress plugin$LINK_END_0$ that provides the ability to defer any offscreen images, or switch to a theme that provides that functionality. Also consider using $LINK_START_1$the AMP plugin$LINK_END_1$.",
    "description": "Additional description of a Lighthouse audit that tells the user how they can improve performance by lazy loading images that are initially offscreen in the context of the Wordpress CMS platform. This is displayed after a user expands the section to see more. No character length limits. Links in (parenthesis) become link texts to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://wordpress.org/plugins/search/lazy+load/)"
      },
      "LINK_START_1": {
        "content": "["
      },
      "LINK_END_1": {
        "content": "](https://wordpress.org/plugins/amp/)"
      }
    }
  },
  "stack-packs/packs/wordpress.js | render_blocking_resources": {
    "message": "There are a number of WordPress plugins that can help you $LINK_START_0$inline critical assets$LINK_END_0$ or $LINK_START_1$defer less important resources$LINK_END_1$. Beware that optimizations provided by these plugins may break features of your theme or plugins, so you will likely need to make code changes.",
    "description": "Additional description of a Lighthouse audit that tells the user how they can improve performance by reducing the amount of render blocking resources present on their page, in the context of the Wordpress CMS platform. This is displayed after a user expands the section to see more. No character length limits. Links in (parenthesis) become link texts to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://wordpress.org/plugins/search/critical+css/)"
      },
      "LINK_START_1": {
        "content": "["
      },
      "LINK_END_1": {
        "content": "](https://wordpress.org/plugins/search/defer+css+javascript/)"
      }
    }
  },
  "stack-packs/packs/wordpress.js | time_to_first_byte": {
    "message": "Themes, plugins, and server specifications all contribute to server response time. Consider finding a more optimized theme, carefully selecting an optimization plugin, and/or upgrading your server.",
    "description": "Additional description of a Lighthouse audit that tells the user how they can improve the time to first byte speed metric, in the context of the Wordpress CMS platform. This is displayed after a user expands the section to see more. No character length limits. Links in (parenthesis) become link texts to additional documentation."
  },
  "stack-packs/packs/wordpress.js | total_byte_weight": {
    "message": "Consider showing excerpts in your post lists (e.g. via the more tag), reducing the number of posts shown on a given page, breaking your long posts into multiple pages, or using a plugin to lazy-load comments.",
    "description": "Additional description of a Lighthouse audit that tells the user how they can improve site loading performance by reducing the total bytes delivered by their page in the context of the Wordpress CMS platform. This is displayed after a user expands the section to see more. No character length limits. Links in (parenthesis) become link texts to additional documentation."
  },
  "stack-packs/packs/wordpress.js | unminified_css": {
    "message": "A number of $LINK_START_0$WordPress plugins$LINK_END_0$ can speed up your site by concatenating, minifying, and compressing your styles. You may also want to use a build process to do this minification up-front if possible.",
    "description": "Additional description of a Lighthouse audit that tells the user how they can improve performance by minifying their CSS files in the context of the Wordpress CMS platform. This is displayed after a user expands the section to see more. No character length limits. Links in (parenthesis) become link texts to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://wordpress.org/plugins/search/minify+css/)"
      }
    }
  },
  "stack-packs/packs/wordpress.js | unminified_javascript": {
    "message": "A number of $LINK_START_0$WordPress plugins$LINK_END_0$ can speed up your site by concatenating, minifying, and compressing your scripts. You may also want to use a build process to do this minification up front if possible.",
    "description": "Additional description of a Lighthouse audit that tells the user how they can improve performance by minifying their Javascript files in the context of the Wordpress CMS platform. This is displayed after a user expands the section to see more. No character length limits. Links in (parenthesis) become link texts to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://wordpress.org/plugins/search/minify+javascript/)"
      }
    }
  },
  "stack-packs/packs/wordpress.js | unused_css_rules": {
    "message": "Consider reducing, or switching, the number of $LINK_START_0$WordPress plugins$LINK_END_0$ loading unused CSS in your page. To identify plugins that are adding extraneous CSS, try running $LINK_START_1$code coverage$LINK_END_1$ in Chrome DevTools. You can identify the theme/plugin responsible from the URL of the stylesheet. Look out for plugins that have many stylesheets in the list which have a lot of red in code coverage. A plugin should only enqueue a stylesheet if it is actually used on the page.",
    "description": "Additional description of a Lighthouse audit that tells the user how they can improve performance by removing unused CSS, in the context of the Wordpress CMS platform. This is displayed after a user expands the section to see more. No character length limits. Links in (parenthesis) become link texts to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://wordpress.org/plugins/)"
      },
      "LINK_START_1": {
        "content": "["
      },
      "LINK_END_1": {
        "content": "](https://developers.google.com/web/updates/2017/04/devtools-release-notes#coverage)"
      }
    }
  },
  "stack-packs/packs/wordpress.js | unused_javascript": {
    "message": "Consider reducing, or switching, the number of $LINK_START_0$WordPress plugins$LINK_END_0$ loading unused JavaScript in your page. To identify plugins that are adding extraneous JS, try running $LINK_START_1$code coverage$LINK_END_1$ in Chrome DevTools. You can identify the theme/plugin responsible from the URL of the script. Look out for plugins that have many scripts in the list which have a lot of red in code coverage. A plugin should only enqueue a script if it is actually used on the page.",
    "description": "Additional description of a Lighthouse audit that tells the user how they can improve performance by removing unused Javascript files in the context of the Wordpress CMS platform. This is displayed after a user expands the section to see more. No character length limits. Links in (parenthesis) become link texts to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://wordpress.org/plugins/)"
      },
      "LINK_START_1": {
        "content": "["
      },
      "LINK_END_1": {
        "content": "](https://developers.google.com/web/updates/2017/04/devtools-release-notes#coverage)"
      }
    }
  },
  "stack-packs/packs/wordpress.js | uses_long_cache_ttl": {
    "message": "Read about $LINK_START_0$Browser Caching in WordPress$LINK_END_0$.",
    "description": "Additional description of a Lighthouse audit that tells the user how they can improve their site by enabling long caching in the context of the Wordpress CMS platform. This is displayed after a user expands the section to see more. No character length limits. Links in (parenthesis) become link texts to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://codex.wordpress.org/WordPress_Optimization#Browser_Caching)"
      }
    }
  },
  "stack-packs/packs/wordpress.js | uses_optimized_images": {
    "message": "Consider using an $LINK_START_0$image optimization WordPress plugin$LINK_END_0$ that compresses your images while retaining quality.",
    "description": "Additional description of a Lighthouse audit that tells the user how they can improve site performance by optimizing images, in the context of the Wordpress CMS platform. This is displayed after a user expands the section to see more. No character length limits. Links in (parenthesis) become link texts to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://wordpress.org/plugins/search/optimize+images/)"
      }
    }
  },
  "stack-packs/packs/wordpress.js | uses_responsive_images": {
    "message": "Upload images directly through the $LINK_START_0$media library$LINK_END_0$ to ensure that the required image sizes are available, and then insert them from the media library or use the image widget to ensure the optimal image sizes are used (including those for the responsive breakpoints). Avoid using $MARKDOWN_SNIPPET_0$ images unless the dimensions are adequate for their usage. $LINK_START_1$Learn More$LINK_END_1$.",
    "description": "Additional description of a Lighthouse audit that tells the user how they can improve performance by using responsive images in the context of the Wordpress CMS platform. This is displayed after a user expands the section to see more. No character length limits. Links in (parenthesis) become link texts to additional documentation.",
    "placeholders": {
      "MARKDOWN_SNIPPET_0": {
        "content": "`Full Size`",
        "example": "Full Size"
      },
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://codex.wordpress.org/Media_Library_Screen)"
      },
      "LINK_START_1": {
        "content": "["
      },
      "LINK_END_1": {
        "content": "](https://codex.wordpress.org/Inserting_Images_into_Posts_and_Pages#Image_Size)"
      }
    }
  },
  "stack-packs/packs/wordpress.js | uses_text_compression": {
    "message": "You can enable text compression in your web server configuration.",
    "description": "Additional description of a Lighthouse audit that tells the user how they can improve performance via enabling text compression in the context of the Wordpress CMS platform. This is displayed after a user expands the section to see more. No character length limits. Links in (parenthesis) become link texts to additional documentation."
  },
  "stack-packs/packs/wordpress.js | uses_webp_images": {
    "message": "Consider using a $LINK_START_0$plugin$LINK_END_0$ or service that will automatically convert your uploaded images to the optimal formats.",
    "description": "Additional description of a Lighthouse audit that tells the user how they can improve image loading by using webp in the context of the Wordpress CMS platform. This is displayed after a user expands the section to see more. No character length limits. Links in (parenthesis) become link texts to additional documentation.",
    "placeholders": {
      "LINK_START_0": {
        "content": "["
      },
      "LINK_END_0": {
        "content": "](https://wordpress.org/plugins/search/convert+webp/)"
      }
    }
  }
}
